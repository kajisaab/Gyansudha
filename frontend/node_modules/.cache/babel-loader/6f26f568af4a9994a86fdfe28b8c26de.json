{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amank\\\\Desktop\\\\Real_Project_file\\\\ges\\\\frontend\\\\src\\\\Components\\\\admin\\\\AdminLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport * as yup from \"yup\";\nimport AdminPage from \"./AdminPage\";\nimport { setUserSession } from \"../../utils/Common\";\nimport Modal from \"../../Errors/Error\";\nimport Loading from \"./Loading\";\nimport { login } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AdminLogin(props) {\n  _s();\n\n  // // const [isAuth, setisAuth] = useState(false);\n  const [authLoading, setauthLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState(false);\n  const [errormessage, setErrormessage] = useState(null);\n  const history = useHistory();\n\n  const openModel = () => {\n    setShowModal(prev => !prev);\n  }; // const formik = useFormik({\n  //   initialValues: { email: \"\", password: \"\" },\n  //   validateOnBlur: true,\n  // validationSchema: validationSchema,\n  //   submit: async (values) => {\n  //     console.log(\"submit Clicked\");\n  //     const data = {\n  //       email: values.email,\n  //       password: values.password,\n  //     };\n  //     setauthLoading(true);\n  //     const respone = await axios\n  //       .post(\"http://localhost:8080/login/login\", data, {\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //       })\n  //       .then(\n  //         (res) => {\n  //           if (res.status === 422) {\n  //             throw new Error(\"Validation Failde\");\n  //           }\n  //           if (res.status !== 200 && res.status !== 201) {\n  //             console.log(\"Error\");\n  //             throw new Error(\"Could not authenticate you !\");\n  //           }\n  //           return res.json();\n  //         },\n  //         alert(\"This data is submitting\"),\n  //         console.log(\"this is the login data\")\n  //       )\n  //       .then((resData) => {\n  //         console.log(resultdata);\n  //         setauthLoading(false);\n  //         setUserId(resultdata.userId);\n  //         setToken(resultdata.tokne);\n  //         localStorage.setItem(\"token\", resultdata.token);\n  //         localStorage.setItem(\"userId\", resultdata.userId);\n  //         const remaininiMillisecond = 60 * 60 * 100;\n  //         console.log(\"here working\");\n  //         const expriyDate = new Date(\n  //           new Date().getTime() + remaininiMillisecond\n  //         );\n  //         history.push(\"/AdminPage\");\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //         setauthLoading(false);\n  //         alert(\"There error occurred  \", err);\n  //       });\n  //   },\n  // });\n\n\n  const validationSchema = yup.object({\n    email: yup.string().required(\"Required\"),\n    password: yup.string().required(\"Required\")\n  });\n\n  const onSubmit = values => {\n    /*#__PURE__*/\n    _jsxDEV(\"login\", {\n      authData: values,\n      setError: setError,\n      setErrormessage: setErrormessage,\n      setauthLoading: setauthLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this); // console.log(\"submit Clicked\");\n    // console.log(JSON.stringify(values.email));\n    // console.log(values.password);\n    // setauthLoading(true);\n    // fetch(\"http://localhost:8080/auth/login\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     email: values.email,\n    //     password: values.password,\n    //   }),\n    // })\n    //   .then((res) => {\n    //     if (res.status === 422) {\n    //       throw new Error(\"Validation Failed\");\n    //     }\n    //     if (res.status === 401) {\n    //       throw new Error(\"A user with this email can't be found\");\n    //     }\n    //     if (res.status === 402) {\n    //       throw new Error(\"Wrong Password\");\n    //     }\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       console.log(\"Error\");\n    //       throw new Error(\"Please Check your Credentials !\");\n    //     }\n    //     return res.json();\n    //   })\n    //   .then((resData) => {\n    //     console.log(resData);\n    //     setauthLoading(false);\n    //     // (\"token\", resData.token);\n    //     setUserSession(resData.token, resData.userId);\n    //     const remaininiMillisecond = 60 * 60 * 100;\n    //     const expriyDate = new Date(\n    //       new Date().getTime() + remaininiMillisecond\n    //     );\n    //     props.history.push(\"/AdminPage\");\n    //     // history.push(\"/AdminPage\", token);\n    //   })\n    //   .catch((err) => {\n    //     // console.log(err);\n    //     // console.log(err.response.statusText);\n    //     // console.log(err);\n    //     // alert(err.message);\n    //     setError(true);\n    //     setauthLoading(false);\n    //     setErrormessage(err.message);\n    //     openModel();\n    //   });\n\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validateOnBlur: true,\n    validationSchema: validationSchema,\n    onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: authLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"Welcome To Admin Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EmailPassword, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"E-mail\", \" \", formik.errors.email && formik.touched.email && /*#__PURE__*/_jsxDEV(ErrorText, {\n              children: formik.errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            type: \"text\",\n            placeholder: \"Enter your Email\",\n            value: formik.values.email,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            className: formik.errors.email && formik.touched.email && \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Password\", \" \", formik.errors.password && formik.touched.password && /*#__PURE__*/_jsxDEV(ErrorText, {\n              children: formik.errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Enter your Password\",\n            value: formik.values.password,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            className: formik.errors.password && formik.touched.password && \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), error ? /*#__PURE__*/_jsxDEV(Modal, {\n        showModal: showModal,\n        setShowModal: setShowModal,\n        errormessage: errormessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(AdminLogin, \"CSJHHJCLr00CYT9qzTwB2gjeFAU=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = AdminLogin;\nexport default AdminLogin;\nconst ErrorText = styled.label`\n  margin-top: 0;\n  margin-bottom: 5px;\n  color: red;\n  text-decoration: none;\n  font-weight: 500;\n`;\n_c2 = ErrorText;\nconst Text = styled.div`\n  color: #3c574e;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  font-size: 1.5rem;\n  font-weight: bold;\n  text-decoration: underline;\n`;\n_c3 = Text;\nconst FormContainer = styled.form`\n  background-color: #020035;\n  display: flex;\n  flex-direction: column;\n  width: 30em;\n  height: 20em;\n  padding: 20px;\n  top: 50%;\n  left: 50%;\n  margin-left: -15em;\n  margin-top: -9em;\n  position: fixed;\n  border-radius: 20px;\n`;\n_c4 = FormContainer;\nconst EmailPassword = styled.div`\n  height: 15em;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  width: 20em;\n  top: 35.5%;\n  left: 39%;\n  position: fixed;\n\n  h5 {\n    color: #3c574e;\n    margin-top: 0;\n    margin-bottom: 5px;\n    left: -10%;\n  }\n`;\n_c5 = EmailPassword;\nexport const SubmitButton = styled.button`\n  top: 12em;\n  left: 20em;\n  position: relative;\n  padding: 11px 1.6em;\n  width: 7em;\n  color: #fff;\n  font-size: 15px;\n  font-weight: 600;\n  border: none;\n  border-radius: 100px 100px 100px 100px;\n  cursor: pointer;\n  transition: all, 240ms ease-in-out;\n  background: rgba(241, 196, 15, 1);\n  background: linear-gradient(\n    58deg,\n    rgba(241, 196, 15, 1) 20%,\n    rgba(243, 172, 18, 1) 100%\n  );\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    filter: brightness(1.03);\n  }\n  &:disabled {\n    filter: contrast(0.7);\n  }\n`;\n_c6 = SubmitButton;\nexport const Input = styled.input`\n  margin-bottom: 10px;\n  width: 20em;\n  height: 30px;\n  justify-content: center;\n  align-items: center;\n  margin-left: 20px;\n  border-radius: 15px;\n  outline: none;\n  border: 1px solid rgba(200, 200, 200, 0.03);\n  padding: 0 10px;\n  transition: all, 200ms ease-in-out;\n  box-sizing: border-box;\n  border-bottom: 1.4px solid transparent;\n\n  &:focus {\n    outline: none;\n    border-bottom: 2px solid #111;\n  }\n  &:not(:last-of-type) {\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\n  }\n`;\n_c7 = Input;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"AdminLogin\");\n$RefreshReg$(_c2, \"ErrorText\");\n$RefreshReg$(_c3, \"Text\");\n$RefreshReg$(_c4, \"FormContainer\");\n$RefreshReg$(_c5, \"EmailPassword\");\n$RefreshReg$(_c6, \"SubmitButton\");\n$RefreshReg$(_c7, \"Input\");","map":{"version":3,"sources":["C:/Users/amank/Desktop/Real_Project_file/ges/frontend/src/Components/admin/AdminLogin.js"],"names":["React","useState","useFormik","useHistory","styled","yup","AdminPage","setUserSession","Modal","Loading","login","AdminLogin","props","authLoading","setauthLoading","showModal","setShowModal","error","setError","errormessage","setErrormessage","history","openModel","prev","validationSchema","object","email","string","required","password","onSubmit","values","formik","initialValues","validateOnBlur","handleSubmit","errors","touched","handleChange","handleBlur","ErrorText","label","Text","div","FormContainer","form","EmailPassword","SubmitButton","button","Input","input"],"mappings":"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A;MAAMD,S;AAQN,MAAME,IAAI,GAAGtC,MAAM,CAACuC,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,I;AAUN,MAAME,aAAa,GAAGxC,MAAM,CAACyC,IAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,a;AAeN,MAAME,aAAa,GAAG1C,MAAM,CAACuC,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;MAAMG,a;AAkBN,OAAO,MAAMC,YAAY,GAAG3C,MAAM,CAAC4C,MAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5BO;MAAMD,Y;AA8Bb,OAAO,MAAME,KAAK,GAAG7C,MAAM,CAAC8C,KAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBO;MAAMD,K","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport * as yup from \"yup\";\r\nimport AdminPage from \"./AdminPage\";\r\nimport { setUserSession } from \"../../utils/Common\";\r\nimport Modal from \"../../Errors/Error\";\r\nimport Loading from \"./Loading\";\r\nimport { login } from \"../../api/api\";\r\n\r\nfunction AdminLogin(props) {\r\n  // // const [isAuth, setisAuth] = useState(false);\r\n  const [authLoading, setauthLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [errormessage, setErrormessage] = useState(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const openModel = () => {\r\n    setShowModal((prev) => !prev);\r\n  };\r\n\r\n  // const formik = useFormik({\r\n  //   initialValues: { email: \"\", password: \"\" },\r\n  //   validateOnBlur: true,\r\n  // validationSchema: validationSchema,\r\n  //   submit: async (values) => {\r\n  //     console.log(\"submit Clicked\");\r\n  //     const data = {\r\n  //       email: values.email,\r\n  //       password: values.password,\r\n  //     };\r\n  //     setauthLoading(true);\r\n  //     const respone = await axios\r\n  //       .post(\"http://localhost:8080/login/login\", data, {\r\n  //         headers: {\r\n  //           \"Content-Type\": \"application/json\",\r\n  //         },\r\n  //       })\r\n  //       .then(\r\n  //         (res) => {\r\n  //           if (res.status === 422) {\r\n  //             throw new Error(\"Validation Failde\");\r\n  //           }\r\n  //           if (res.status !== 200 && res.status !== 201) {\r\n  //             console.log(\"Error\");\r\n  //             throw new Error(\"Could not authenticate you !\");\r\n  //           }\r\n  //           return res.json();\r\n  //         },\r\n  //         alert(\"This data is submitting\"),\r\n  //         console.log(\"this is the login data\")\r\n  //       )\r\n  //       .then((resData) => {\r\n  //         console.log(resultdata);\r\n  //         setauthLoading(false);\r\n  //         setUserId(resultdata.userId);\r\n  //         setToken(resultdata.tokne);\r\n  //         localStorage.setItem(\"token\", resultdata.token);\r\n  //         localStorage.setItem(\"userId\", resultdata.userId);\r\n  //         const remaininiMillisecond = 60 * 60 * 100;\r\n  //         console.log(\"here working\");\r\n  //         const expriyDate = new Date(\r\n  //           new Date().getTime() + remaininiMillisecond\r\n  //         );\r\n  //         history.push(\"/AdminPage\");\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.log(err);\r\n  //         setauthLoading(false);\r\n  //         alert(\"There error occurred  \", err);\r\n  //       });\r\n  //   },\r\n  // });\r\n\r\n  const validationSchema = yup.object({\r\n    email: yup.string().required(\"Required\"),\r\n    password: yup.string().required(\"Required\"),\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    <login\r\n      authData={values}\r\n      setError={setError}\r\n      setErrormessage={setErrormessage}\r\n      setauthLoading={setauthLoading}\r\n    />;\r\n    // console.log(\"submit Clicked\");\r\n    // console.log(JSON.stringify(values.email));\r\n    // console.log(values.password);\r\n    // setauthLoading(true);\r\n\r\n    // fetch(\"http://localhost:8080/auth/login\", {\r\n    //   method: \"POST\",\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     email: values.email,\r\n    //     password: values.password,\r\n    //   }),\r\n    // })\r\n    //   .then((res) => {\r\n    //     if (res.status === 422) {\r\n    //       throw new Error(\"Validation Failed\");\r\n    //     }\r\n    //     if (res.status === 401) {\r\n    //       throw new Error(\"A user with this email can't be found\");\r\n    //     }\r\n    //     if (res.status === 402) {\r\n    //       throw new Error(\"Wrong Password\");\r\n    //     }\r\n    //     if (res.status !== 200 && res.status !== 201) {\r\n    //       console.log(\"Error\");\r\n    //       throw new Error(\"Please Check your Credentials !\");\r\n    //     }\r\n\r\n    //     return res.json();\r\n    //   })\r\n    //   .then((resData) => {\r\n    //     console.log(resData);\r\n    //     setauthLoading(false);\r\n    //     // (\"token\", resData.token);\r\n    //     setUserSession(resData.token, resData.userId);\r\n    //     const remaininiMillisecond = 60 * 60 * 100;\r\n    //     const expriyDate = new Date(\r\n    //       new Date().getTime() + remaininiMillisecond\r\n    //     );\r\n\r\n    //     props.history.push(\"/AdminPage\");\r\n\r\n    //     // history.push(\"/AdminPage\", token);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     // console.log(err);\r\n    //     // console.log(err.response.statusText);\r\n    //     // console.log(err);\r\n    //     // alert(err.message);\r\n    //     setError(true);\r\n    //     setauthLoading(false);\r\n    //     setErrormessage(err.message);\r\n    //     openModel();\r\n    //   });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: { email: \"\", password: \"\" },\r\n    validateOnBlur: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {authLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div>\r\n          <FormContainer onSubmit={formik.handleSubmit}>\r\n            <Text>Welcome To Admin Panel</Text>\r\n            <EmailPassword>\r\n              <h5>\r\n                E-mail{\" \"}\r\n                {formik.errors.email && formik.touched.email && (\r\n                  <ErrorText>{formik.errors.email}</ErrorText>\r\n                )}\r\n              </h5>\r\n              <Input\r\n                name=\"email\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your Email\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                className={\r\n                  formik.errors.email && formik.touched.email && \"error\"\r\n                }\r\n              />\r\n\r\n              <h5>\r\n                Password{\" \"}\r\n                {formik.errors.password && formik.touched.password && (\r\n                  <ErrorText>{formik.errors.password}</ErrorText>\r\n                )}\r\n              </h5>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Enter your Password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                className={\r\n                  formik.errors.password && formik.touched.password && \"error\"\r\n                }\r\n              />\r\n            </EmailPassword>\r\n            {/* <Text>{token}</Text> */}\r\n            <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n\r\n            {/* {error === \"\" ? null : alert(error)} */}\r\n          </FormContainer>\r\n          {error ? (\r\n            <Modal\r\n              showModal={showModal}\r\n              setShowModal={setShowModal}\r\n              errormessage={errormessage}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminLogin;\r\n\r\nconst ErrorText = styled.label`\r\n  margin-top: 0;\r\n  margin-bottom: 5px;\r\n  color: red;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  color: #3c574e;\r\n  align-items: center;\r\n  justify-content: center;\r\n  display: flex;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst FormContainer = styled.form`\r\n  background-color: #020035;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 30em;\r\n  height: 20em;\r\n  padding: 20px;\r\n  top: 50%;\r\n  left: 50%;\r\n  margin-left: -15em;\r\n  margin-top: -9em;\r\n  position: fixed;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst EmailPassword = styled.div`\r\n  height: 15em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  width: 20em;\r\n  top: 35.5%;\r\n  left: 39%;\r\n  position: fixed;\r\n\r\n  h5 {\r\n    color: #3c574e;\r\n    margin-top: 0;\r\n    margin-bottom: 5px;\r\n    left: -10%;\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  top: 12em;\r\n  left: 20em;\r\n  position: relative;\r\n  padding: 11px 1.6em;\r\n  width: 7em;\r\n  color: #fff;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  border: none;\r\n  border-radius: 100px 100px 100px 100px;\r\n  cursor: pointer;\r\n  transition: all, 240ms ease-in-out;\r\n  background: rgba(241, 196, 15, 1);\r\n  background: linear-gradient(\r\n    58deg,\r\n    rgba(241, 196, 15, 1) 20%,\r\n    rgba(243, 172, 18, 1) 100%\r\n  );\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    filter: brightness(1.03);\r\n  }\r\n  &:disabled {\r\n    filter: contrast(0.7);\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  margin-bottom: 10px;\r\n  width: 20em;\r\n  height: 30px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 20px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  border: 1px solid rgba(200, 200, 200, 0.03);\r\n  padding: 0 10px;\r\n  transition: all, 200ms ease-in-out;\r\n  box-sizing: border-box;\r\n  border-bottom: 1.4px solid transparent;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 2px solid #111;\r\n  }\r\n  &:not(:last-of-type) {\r\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}
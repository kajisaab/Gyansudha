{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amank\\\\Desktop\\\\Real_Project_file\\\\ges\\\\frontend\\\\src\\\\Components\\\\admin\\\\AdminLogin.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useFormik } from \"formik\";\n// import { useHistory } from \"react-router\";\n// import styled from \"styled-components\";\n// import * as yup from \"yup\";\n// import AdminPage from \"./AdminPage\";\n// function AdminLogin() {\n//   // // const [isAuth, setisAuth] = useState(false);\n//   const [authLoading, setauthLoading] = useState(false);\n//   const [userId, setUserId] = useState(\"\");\n//   const [token, setToken] = useState(\"\");\n//   const history = useHistory();\n//   // const formik = useFormik({\n//   //   initialValues: { email: \"\", password: \"\" },\n//   //   validateOnBlur: true,\n//   // validationSchema: validationSchema,\n//   //   submit: async (values) => {\n//   //     console.log(\"submit Clicked\");\n//   //     const data = {\n//   //       email: values.email,\n//   //       password: values.password,\n//   //     };\n//   //     setauthLoading(true);\n//   //     const respone = await axios\n//   //       .post(\"http://localhost:8080/login/login\", data, {\n//   //         headers: {\n//   //           \"Content-Type\": \"application/json\",\n//   //         },\n//   //       })\n//   //       .then(\n//   //         (res) => {\n//   //           if (res.status === 422) {\n//   //             throw new Error(\"Validation Failde\");\n//   //           }\n//   //           if (res.status !== 200 && res.status !== 201) {\n//   //             console.log(\"Error\");\n//   //             throw new Error(\"Could not authenticate you !\");\n//   //           }\n//   //           return res.json();\n//   //         },\n//   //         alert(\"This data is submitting\"),\n//   //         console.log(\"this is the login data\")\n//   //       )\n//   //       .then((resData) => {\n//   //         console.log(resultdata);\n//   //         setauthLoading(false);\n//   //         setUserId(resultdata.userId);\n//   //         setToken(resultdata.tokne);\n//   //         localStorage.setItem(\"token\", resultdata.token);\n//   //         localStorage.setItem(\"userId\", resultdata.userId);\n//   //         const remaininiMillisecond = 60 * 60 * 100;\n//   //         console.log(\"here working\");\n//   //         const expriyDate = new Date(\n//   //           new Date().getTime() + remaininiMillisecond\n//   //         );\n//   //         history.push(\"/AdminPage\");\n//   //       })\n//   //       .catch((err) => {\n//   //         console.log(err);\n//   //         setauthLoading(false);\n//   //         alert(\"There error occurred  \", err);\n//   //       });\n//   //   },\n//   // });\n//   const validationSchema = yup.object({\n//     email: yup.string().required(\"Required\"),\n//     password: yup.string().required(\"Required\"),\n//   });\n//   const formik = useFormik({\n//     initialValues: { email: \"\", password: \"\" },\n//     validateOnBlur: true,\n//     validationSchema: validationSchema,\n//     onSubmit,\n//   });\n//   return (\n//     <FormContainer onSubmit={formik.handleSubmit}>\n//       <Text>Welcome To Admin Panel</Text>\n//       <EmailPassword>\n//         <h5>\n//           E-mail{\" \"}\n//           {formik.errors.email && formik.touched.email && (\n//             <ErrorText>{formik.errors.email}</ErrorText>\n//           )}\n//         </h5>\n//         <Input\n//           name=\"email\"\n//           type=\"text\"\n//           placeholder=\"Enter your Email\"\n//           value={formik.values.email}\n//           onChange={formik.handleChange}\n//           onBlur={formik.handleBlur}\n//           className={formik.errors.email && formik.touched.email && \"error\"}\n//         />\n//         <h5>\n//           Password{\" \"}\n//           {formik.errors.password && formik.touched.password && (\n//             <ErrorText>{formik.errors.password}</ErrorText>\n//           )}\n//         </h5>\n//         <Input\n//           name=\"password\"\n//           type=\"password\"\n//           placeholder=\"Enter your Password\"\n//           value={formik.values.password}\n//           onChange={formik.handleChange}\n//           onBlur={formik.handleBlur}\n//           className={\n//             formik.errors.password && formik.touched.password && \"error\"\n//           }\n//         />\n//       </EmailPassword>\n//       <SubmitButton type=\"submit\">Submit</SubmitButton>\n//     </FormContainer>\n//   );\n// }\n// export default AdminLogin;\nimport React, { useState } from \"react\";\nimport { required, email, length } from \"../../validator/validator\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AdminLogin() {\n  _s();\n\n  // const [emails, setEmails] = useState({\n  // value: \"\",\n  // valid: false,\n  // touched: false,\n  // validators: [required, email],\n  // });\n  // const [password, setPassword] = useState({\n  // value: \"\",\n  // valid: false,\n  // touched: false,\n  // validators: [required, length({ min: 5 })],\n  // });\n  const [form, setForm] = useState({\n    loginform: {\n      email: {\n        value: \"\",\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: \"\",\n        valid: false,\n        touched: false,\n        validators: [required, length({\n          min: 5\n        })]\n      },\n      formIsValid: false\n    }\n  });\n\n  const inputChangeHandler = (input, value) => {\n    setForm(prevState => {\n      let isValid = true;\n\n      for (const validator of prevState.loginform[input].validators) {\n        isValid = isValid && validator(value);\n      }\n\n      const updateForm = { ...prevState.loginform,\n        [input]: { ...prevState.loginform[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n\n      for (const inputName in updateForm) {\n        formIsValid = formIsValid && updateForm[inputName].valid;\n      }\n\n      return {\n        loginform: updateForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  const passValues = e => {\n    console.log(form.loginform.email, form.loginform.password);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    onSubmit: passValues,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      label: \"Your Email\",\n      id: \"email\",\n      onChange: inputChangeHandler,\n      value: form.loginform[\"email\"].value,\n      valid: form.loginform[\"email\"].valid,\n      touched: form.loginform[\"email\"].touched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      label: \"Password\",\n      onChange: inputChangeHandler,\n      value: form.loginform[\"password\"].value,\n      valid: form.loginform[\"password\"].valid,\n      touched: form.loginform[\"password\"].touched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminLogin, \"U6HBelfAa9JfmMS6DmKs3Vm8kwk=\");\n\n_c = AdminLogin;\nexport default AdminLogin;\nconst ErrorText = styled.label`\n  margin-top: 0;\n  margin-bottom: 5px;\n  color: red;\n  text-decoration: none;\n  font-weight: 500;\n`;\nconst Text = styled.div`\n  color: #3c574e;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  font-size: 1.5rem;\n  font-weight: bold;\n  text-decoration: underline;\n`;\nconst FormContainer = styled.form`\n  background-color: #020035;\n  display: flex;\n  flex-direction: column;\n  width: 30em;\n  height: 20em;\n  padding: 20px;\n  top: 50%;\n  left: 50%;\n  margin-left: -15em;\n  margin-top: -9em;\n  position: fixed;\n  border-radius: 20px;\n`;\n_c2 = FormContainer;\nconst EmailPassword = styled.div`\n  height: 15em;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  width: 20em;\n  top: 35.5%;\n  left: 39%;\n  position: fixed;\n\n  h5 {\n    color: #3c574e;\n    margin-top: 0;\n    margin-bottom: 5px;\n    left: -10%;\n  }\n`;\nexport const SubmitButton = styled.button`\n  top: 12em;\n  left: 20em;\n  position: relative;\n  padding: 11px 1.6em;\n  width: 7em;\n  color: #fff;\n  font-size: 15px;\n  font-weight: 600;\n  border: none;\n  border-radius: 100px 100px 100px 100px;\n  cursor: pointer;\n  transition: all, 240ms ease-in-out;\n  background: rgba(241, 196, 15, 1);\n  background: linear-gradient(\n    58deg,\n    rgba(241, 196, 15, 1) 20%,\n    rgba(243, 172, 18, 1) 100%\n  );\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    filter: brightness(1.03);\n  }\n  &:disabled {\n    filter: contrast(0.7);\n  }\n`;\nexport const Input = styled.input`\n  margin-bottom: 10px;\n  width: 20em;\n  height: 30px;\n  justify-content: center;\n  align-items: center;\n  margin-left: 20px;\n  border-radius: 15px;\n  outline: none;\n  border: 1px solid rgba(200, 200, 200, 0.03);\n  padding: 0 10px;\n  transition: all, 200ms ease-in-out;\n  box-sizing: border-box;\n  border-bottom: 1.4px solid transparent;\n\n  &:focus {\n    outline: none;\n    border-bottom: 2px solid #111;\n  }\n  &:not(:last-of-type) {\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\n  }\n`;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AdminLogin\");\n$RefreshReg$(_c2, \"FormContainer\");","map":{"version":3,"sources":["C:/Users/amank/Desktop/Real_Project_file/ges/frontend/src/Components/admin/AdminLogin.js"],"names":["React","useState","required","email","length","styled","AdminLogin","form","setForm","loginform","value","valid","touched","validators","password","min","formIsValid","inputChangeHandler","input","prevState","isValid","validator","updateForm","inputName","passValues","e","console","log","ErrorText","label","Text","div","FormContainer","EmailPassword","SubmitButton","button","Input"],"mappingsgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,QAAwC,2BAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAC/BQ,IAAAA,SAAS,EAAE;AACTN,MAAAA,KAAK,EAAE;AACLO,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,KAAK,EAAE,KAFF;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,UAAU,EAAE,CAACX,QAAD,EAAWC,KAAX;AAJP,OADE;AAOTW,MAAAA,QAAQ,EAAE;AACRJ,QAAAA,KAAK,EAAE,EADC;AAERC,QAAAA,KAAK,EAAE,KAFC;AAGRC,QAAAA,OAAO,EAAE,KAHD;AAIRC,QAAAA,UAAU,EAAE,CAACX,QAAD,EAAWE,MAAM,CAAC;AAAEW,UAAAA,GAAG,EAAE;AAAP,SAAD,CAAjB;AAJJ,OAPD;AAaTC,MAAAA,WAAW,EAAE;AAbJ;AADoB,GAAD,CAAhC;;AAkBA,QAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQR,KAAR,KAAkB;AAC3CF,IAAAA,OAAO,CAAEW,SAAD,IAAe;AACrB,UAAIC,OAAO,GAAG,IAAd;;AACA,WAAK,MAAMC,SAAX,IAAwBF,SAAS,CAACV,SAAV,CAAoBS,KAApB,EAA2BL,UAAnD,EAA+D;AAC7DO,QAAAA,OAAO,GAAGA,OAAO,IAAIC,SAAS,CAACX,KAAD,CAA9B;AACD;;AACD,YAAMY,UAAU,GAAG,EACjB,GAAGH,SAAS,CAACV,SADI;AAEjB,SAACS,KAAD,GAAS,EACP,GAAGC,SAAS,CAACV,SAAV,CAAoBS,KAApB,CADI;AAEPP,UAAAA,KAAK,EAAES,OAFA;AAGPV,UAAAA,KAAK,EAAEA;AAHA;AAFQ,OAAnB;AAQA,UAAIM,WAAW,GAAG,IAAlB;;AACA,WAAK,MAAMO,SAAX,IAAwBD,UAAxB,EAAoC;AAClCN,QAAAA,WAAW,GAAGA,WAAW,IAAIM,UAAU,CAACC,SAAD,CAAV,CAAsBZ,KAAnD;AACD;;AACD,aAAO;AACLF,QAAAA,SAAS,EAAEa,UADN;AAELN,QAAAA,WAAW,EAAEA;AAFR,OAAP;AAID,KArBM,CAAP;AAsBD,GAvBD;;AAyBA,QAAMQ,UAAU,GAAIC,CAAD,IAAO;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAI,CAACE,SAAL,CAAeN,KAA3B,EAAkCI,IAAI,CAACE,SAAL,CAAeK,QAAjD;AACD,GAFD;;AAGA,sBACE,QAAC,aAAD;AAAe,IAAA,QAAQ,EAAEU,UAAzB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,EAAE,EAAC,OAHL;AAIE,MAAA,QAAQ,EAAEP,kBAJZ;AAKE,MAAA,KAAK,EAAEV,IAAI,CAACE,SAAL,CAAe,OAAf,EAAwBC,KALjC;AAME,MAAA,KAAK,EAAEH,IAAI,CAACE,SAAL,CAAe,OAAf,EAAwBE,KANjC;AAOE,MAAA,OAAO,EAAEJ,IAAI,CAACE,SAAL,CAAe,OAAf,EAAwBG;AAPnC;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,QAAQ,EAAEK,kBAJZ;AAKE,MAAA,KAAK,EAAEV,IAAI,CAACE,SAAL,CAAe,UAAf,EAA2BC,KALpC;AAME,MAAA,KAAK,EAAEH,IAAI,CAACE,SAAL,CAAe,UAAf,EAA2BE,KANpC;AAOE,MAAA,OAAO,EAAEJ,IAAI,CAACE,SAAL,CAAe,UAAf,EAA2BG;AAPtC;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAlFQN,U;;KAAAA,U;AAoFT,eAAeA,UAAf;AAEA,MAAMsB,SAAS,GAAGvB,MAAM,CAACwB,KAAM;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMC,IAAI,GAAGzB,MAAM,CAAC0B,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMC,aAAa,GAAG3B,MAAM,CAACE,IAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMyB,a;AAeN,MAAMC,aAAa,GAAG5B,MAAM,CAAC0B,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,OAAO,MAAMG,YAAY,GAAG7B,MAAM,CAAC8B,MAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5BO;AA8BP,OAAO,MAAMC,KAAK,GAAG/B,MAAM,CAACa,KAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBO","sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useFormik } from \"formik\";\r\n// import { useHistory } from \"react-router\";\r\n// import styled from \"styled-components\";\r\n// import * as yup from \"yup\";\r\n// import AdminPage from \"./AdminPage\";\r\n\r\n// function AdminLogin() {\r\n//   // // const [isAuth, setisAuth] = useState(false);\r\n//   const [authLoading, setauthLoading] = useState(false);\r\n//   const [userId, setUserId] = useState(\"\");\r\n//   const [token, setToken] = useState(\"\");\r\n//   const history = useHistory();\r\n//   // const formik = useFormik({\r\n//   //   initialValues: { email: \"\", password: \"\" },\r\n//   //   validateOnBlur: true,\r\n//   // validationSchema: validationSchema,\r\n//   //   submit: async (values) => {\r\n//   //     console.log(\"submit Clicked\");\r\n//   //     const data = {\r\n//   //       email: values.email,\r\n//   //       password: values.password,\r\n//   //     };\r\n//   //     setauthLoading(true);\r\n//   //     const respone = await axios\r\n//   //       .post(\"http://localhost:8080/login/login\", data, {\r\n//   //         headers: {\r\n//   //           \"Content-Type\": \"application/json\",\r\n//   //         },\r\n//   //       })\r\n//   //       .then(\r\n//   //         (res) => {\r\n//   //           if (res.status === 422) {\r\n//   //             throw new Error(\"Validation Failde\");\r\n//   //           }\r\n//   //           if (res.status !== 200 && res.status !== 201) {\r\n//   //             console.log(\"Error\");\r\n//   //             throw new Error(\"Could not authenticate you !\");\r\n//   //           }\r\n//   //           return res.json();\r\n//   //         },\r\n//   //         alert(\"This data is submitting\"),\r\n//   //         console.log(\"this is the login data\")\r\n//   //       )\r\n//   //       .then((resData) => {\r\n//   //         console.log(resultdata);\r\n//   //         setauthLoading(false);\r\n//   //         setUserId(resultdata.userId);\r\n//   //         setToken(resultdata.tokne);\r\n//   //         localStorage.setItem(\"token\", resultdata.token);\r\n//   //         localStorage.setItem(\"userId\", resultdata.userId);\r\n//   //         const remaininiMillisecond = 60 * 60 * 100;\r\n//   //         console.log(\"here working\");\r\n//   //         const expriyDate = new Date(\r\n//   //           new Date().getTime() + remaininiMillisecond\r\n//   //         );\r\n//   //         history.push(\"/AdminPage\");\r\n//   //       })\r\n//   //       .catch((err) => {\r\n//   //         console.log(err);\r\n//   //         setauthLoading(false);\r\n//   //         alert(\"There error occurred  \", err);\r\n//   //       });\r\n//   //   },\r\n//   // });\r\n\r\n//   const validationSchema = yup.object({\r\n//     email: yup.string().required(\"Required\"),\r\n//     password: yup.string().required(\"Required\"),\r\n//   });\r\n\r\n//   const formik = useFormik({\r\n//     initialValues: { email: \"\", password: \"\" },\r\n//     validateOnBlur: true,\r\n//     validationSchema: validationSchema,\r\n//     onSubmit,\r\n//   });\r\n\r\n//   return (\r\n//     <FormContainer onSubmit={formik.handleSubmit}>\r\n//       <Text>Welcome To Admin Panel</Text>\r\n//       <EmailPassword>\r\n//         <h5>\r\n//           E-mail{\" \"}\r\n//           {formik.errors.email && formik.touched.email && (\r\n//             <ErrorText>{formik.errors.email}</ErrorText>\r\n//           )}\r\n//         </h5>\r\n//         <Input\r\n//           name=\"email\"\r\n//           type=\"text\"\r\n//           placeholder=\"Enter your Email\"\r\n//           value={formik.values.email}\r\n//           onChange={formik.handleChange}\r\n//           onBlur={formik.handleBlur}\r\n//           className={formik.errors.email && formik.touched.email && \"error\"}\r\n//         />\r\n\r\n//         <h5>\r\n//           Password{\" \"}\r\n//           {formik.errors.password && formik.touched.password && (\r\n//             <ErrorText>{formik.errors.password}</ErrorText>\r\n//           )}\r\n//         </h5>\r\n//         <Input\r\n//           name=\"password\"\r\n//           type=\"password\"\r\n//           placeholder=\"Enter your Password\"\r\n//           value={formik.values.password}\r\n//           onChange={formik.handleChange}\r\n//           onBlur={formik.handleBlur}\r\n//           className={\r\n//             formik.errors.password && formik.touched.password && \"error\"\r\n//           }\r\n//         />\r\n//       </EmailPassword>\r\n//       <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n//     </FormContainer>\r\n//   );\r\n// }\r\n\r\n// export default AdminLogin;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { required, email, length } from \"../../validator/validator\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction AdminLogin() {\r\n  // const [emails, setEmails] = useState({\r\n  // value: \"\",\r\n  // valid: false,\r\n  // touched: false,\r\n  // validators: [required, email],\r\n  // });\r\n  // const [password, setPassword] = useState({\r\n  // value: \"\",\r\n  // valid: false,\r\n  // touched: false,\r\n  // validators: [required, length({ min: 5 })],\r\n  // });\r\n\r\n  const [form, setForm] = useState({\r\n    loginform: {\r\n      email: {\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        validators: [required, email],\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        validators: [required, length({ min: 5 })],\r\n      },\r\n      formIsValid: false,\r\n    },\r\n  });\r\n\r\n  const inputChangeHandler = (input, value) => {\r\n    setForm((prevState) => {\r\n      let isValid = true;\r\n      for (const validator of prevState.loginform[input].validators) {\r\n        isValid = isValid && validator(value);\r\n      }\r\n      const updateForm = {\r\n        ...prevState.loginform,\r\n        [input]: {\r\n          ...prevState.loginform[input],\r\n          valid: isValid,\r\n          value: value,\r\n        },\r\n      };\r\n      let formIsValid = true;\r\n      for (const inputName in updateForm) {\r\n        formIsValid = formIsValid && updateForm[inputName].valid;\r\n      }\r\n      return {\r\n        loginform: updateForm,\r\n        formIsValid: formIsValid,\r\n      };\r\n    });\r\n  };\r\n\r\n  const passValues = (e) => {\r\n    console.log(form.loginform.email, form.loginform.password);\r\n  };\r\n  return (\r\n    <FormContainer onSubmit={passValues}>\r\n      <input\r\n        type=\"email\"\r\n        label=\"Your Email\"\r\n        id=\"email\"\r\n        onChange={inputChangeHandler}\r\n        value={form.loginform[\"email\"].value}\r\n        valid={form.loginform[\"email\"].valid}\r\n        touched={form.loginform[\"email\"].touched}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        id=\"password\"\r\n        label=\"Password\"\r\n        onChange={inputChangeHandler}\r\n        value={form.loginform[\"password\"].value}\r\n        valid={form.loginform[\"password\"].valid}\r\n        touched={form.loginform[\"password\"].touched}\r\n      />\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default AdminLogin;\r\n\r\nconst ErrorText = styled.label`\r\n  margin-top: 0;\r\n  margin-bottom: 5px;\r\n  color: red;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  color: #3c574e;\r\n  align-items: center;\r\n  justify-content: center;\r\n  display: flex;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst FormContainer = styled.form`\r\n  background-color: #020035;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 30em;\r\n  height: 20em;\r\n  padding: 20px;\r\n  top: 50%;\r\n  left: 50%;\r\n  margin-left: -15em;\r\n  margin-top: -9em;\r\n  position: fixed;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst EmailPassword = styled.div`\r\n  height: 15em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  width: 20em;\r\n  top: 35.5%;\r\n  left: 39%;\r\n  position: fixed;\r\n\r\n  h5 {\r\n    color: #3c574e;\r\n    margin-top: 0;\r\n    margin-bottom: 5px;\r\n    left: -10%;\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  top: 12em;\r\n  left: 20em;\r\n  position: relative;\r\n  padding: 11px 1.6em;\r\n  width: 7em;\r\n  color: #fff;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  border: none;\r\n  border-radius: 100px 100px 100px 100px;\r\n  cursor: pointer;\r\n  transition: all, 240ms ease-in-out;\r\n  background: rgba(241, 196, 15, 1);\r\n  background: linear-gradient(\r\n    58deg,\r\n    rgba(241, 196, 15, 1) 20%,\r\n    rgba(243, 172, 18, 1) 100%\r\n  );\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    filter: brightness(1.03);\r\n  }\r\n  &:disabled {\r\n    filter: contrast(0.7);\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  margin-bottom: 10px;\r\n  width: 20em;\r\n  height: 30px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 20px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  border: 1px solid rgba(200, 200, 200, 0.03);\r\n  padding: 0 10px;\r\n  transition: all, 200ms ease-in-out;\r\n  box-sizing: border-box;\r\n  border-bottom: 1.4px solid transparent;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 2px solid #111;\r\n  }\r\n  &:not(:last-of-type) {\r\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}
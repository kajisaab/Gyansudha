{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amank\\\\Desktop\\\\Real_Project_file\\\\ges\\\\frontend\\\\src\\\\utils\\\\PopupContainer\\\\AdminWords.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { updateAdminWords } from \"../../Data/actions/schooldetailsaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AdminWordsModal({\n  showModals,\n  setShowModals\n}) {\n  _s();\n\n  const [errormessage, setErrormessage] = useState(null);\n  const adminwords = useSelector(function (rootReducers) {\n    return {\n      Description: rootReducers.schoolDescriptionReducer.Description\n    };\n  });\n  const dispatch = useDispatch();\n  const validationSchema = yup.object({\n    Designation: yup.string().min(3).required(\"Minimum Length 5 words\"),\n    Description: yup.string().min(10).required(\"Minimum Length 10 words\"),\n    Name: yup.string().min(5).required(\"Minimum Length 5 words\")\n  });\n  const [image, setImage] = useState(\"\");\n  const [preview, setPreview] = useState(\"\");\n  const finalInputRef = useRef();\n  useEffect(() => {\n    if (image) {\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n\n      reader.readAsDataURL(image);\n    } else {\n      setPreview(null);\n    }\n  }, [image]);\n\n  const HangleImageInput = event => {\n    finalInputRef.current.click();\n  };\n\n  const onSubmit = (e, values, {\n    resetForm\n  }) => {\n    console.log(values); // const formData = new FormData();\n    // formData.append(\"Designation\", values.Designation);\n    // formData.append(\"Description\", values.Description);\n    // formData.append(\"Name\", values.Name);\n    // formData.append(\"Picture\", preview);\n\n    fetch(\"http://localhost:8080/description/createdescription\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Designation: values.Designation,\n        Description: values.Description,\n        Name: values.Name\n      })\n    }).then(res => {\n      if (res.status === 422) {\n        throw new Error(\"Couldn't post the data\");\n      }\n\n      res.json();\n    }).then(resdata => {\n      console.log(resdata);\n    }).catch(err => {\n      setErrormessage(err.message);\n    });\n    resetForm({\n      values: \"\"\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      Designation: \"\",\n      Description: \"\",\n      Name: \"\"\n    },\n    validateOnBlur: true,\n    validationSchema: validationSchema,\n    onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModals ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(adminwords.Description), /*#__PURE__*/_jsxDEV(FormContainer, {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          top: 17,\n          left: 15,\n          children: /*#__PURE__*/_jsxDEV(Inputboxandname, {\n            children: [/*#__PURE__*/_jsxDEV(LabelText, {\n              type: \"small\",\n              color: formik.touched.Designation && formik.errors.Designation ? \"red\" : \"white\",\n              fontsize: formik.touched.Designation && formik.errors.Designation ? 12 : 16,\n              children: formik.touched.Designation && formik.errors.Designation ? \"Designation Required *\" : \"Designation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputDescription, {\n              name: \"Designation\",\n              type: \"text\",\n              placeholder: formik.errors.Designation && formik.touched.Designation ? formik.errors.Designation : \"Please Enter Your Designation\",\n              color: formik.errors.Designation && formik.touched.Designation ? \"red\" : \"black\",\n              width: 30,\n              height: 2.5,\n              margin_left: 20,\n              type: \"random\",\n              value: formik.values.Designation,\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              className: formik.errors.Designation && formik.touched.Designation && \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          top: 17,\n          left: 50,\n          children: /*#__PURE__*/_jsxDEV(Inputboxandname, {\n            children: [/*#__PURE__*/_jsxDEV(LabelText, {\n              type: \"small\",\n              color: formik.touched.Name && formik.errors.Name ? \"red\" : \"white\",\n              fontsize: formik.touched.Name && formik.errors.Name ? 12 : 16,\n              children: formik.touched.Name && formik.errors.Name ? \"Name Required *\" : \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputDescription, {\n              name: \"Name\",\n              type: \"text\",\n              placeholder: formik.errors.Name && formik.touched.Name ? formik.errors.Name : \"Please Enter Your Name\",\n              color: formik.errors.Name && formik.touched.Name ? \"red\" : \"black\",\n              width: 30,\n              height: 2.5,\n              margin_left: 20,\n              type: \"random\",\n              value: formik.values.Name,\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              className: formik.errors.Designation && formik.touched.Designation && \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          top: 30,\n          left: 55,\n          children: [/*#__PURE__*/_jsxDEV(LabelText, {\n            type: \"large\",\n            color: \"white\",\n            children: \"Random\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            accept: \"images/*\",\n            display: \"none\",\n            ref: finalInputRef,\n            onChange: event => {\n              const imagefile = event.target.files[0];\n\n              if (imagefile) {\n                setImage(imagefile);\n              } else {\n                setImage(null);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            left: 75,\n            top: 40,\n            onClick: HangleImageInput,\n            children: [\"Add Photo\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: preview,\n              style: {\n                objectFit: \"cover\",\n                height: \"inherit\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          left: 15,\n          children: [/*#__PURE__*/_jsxDEV(LabelText, {\n            type: \"large\",\n            color: formik.touched.Description && formik.errors.Description ? \"red\" : \"white\",\n            fontsize: formik.touched.Description && formik.errors.Description ? 12 : 16,\n            children: formik.touched.Description && formik.errors.Description ? \"Description Required *\" : \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MultipleLineInput, {\n            name: \"Description\",\n            type: \"textarea\",\n            placeholder: formik.errors.Description && formik.touched.Description ? formik.errors.Description : \"Please Enter Your Complete Description\",\n            color: formik.errors.Description && formik.touched.Description ? \"red\" : \"black\",\n            cols: \"60\",\n            rows: \"16\",\n            value: formik.values.Description,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            className: formik.errors.Description && formik.touched.Description && \"errors\",\n            children: \"NoResize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          top: 78,\n          left: 75,\n          onClick: () => {\n            setShowModals(prev => !prev);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(AdminWordsModal, \"msK6740t+lj3ET1Q+hx/YyAObA4=\", false, function () {\n  return [useSelector, useDispatch, useFormik];\n});\n\n_c = AdminWordsModal;\nexport default AdminWordsModal;\nconst FormContainer = styled.form`\n  background-color: #001219;\n  display: flex;\n  flex-direction: column;\n  width: 60em;\n  height: 30em;\n  top: 15%;\n  left: 15%;\n  position: fixed;\n  border-radius: 20px;\n  justify-content: space-evenly;\n`;\n_c2 = FormContainer;\nconst Input = styled.input`\n  margin: 40px 0px 0px 30px;\n  background-color: white;\n  width: 20rem;\n  height: 2rem;\n  text-indent: 10px;\n  outline: none;\n  text-decoration: none;\n  border: none;\n  border-radius: 8px;\n  display: ${props => props.display};\n`;\n_c3 = Input;\nconst ImageContainer = styled.div`\n  position: fixed;\n  top: 37%;\n  left: 58%;\n  height: 15vw;\n  width: 15vw;\n  background-color: white;\n`; // This is used to change the location of the input field with the Description\n\n_c4 = ImageContainer;\nconst InputField = styled.div`\n  /* display: flex;\n  flex-direction: row;\n  padding: 5px;\n  justify-content: space-evenly; */\n  position: fixed;\n  top: ${props => props.top}%;\n  left: ${props => props.left}%;\n  padding: 5px;\n`;\n_c5 = InputField;\nconst Inputboxandname = styled.div`\n  /* display: flex;\n  flex-direction: column; */\n  top: 20%;\n`;\n_c6 = Inputboxandname;\nconst InputDescription = styled.input`\n  width: ${props => props.width}em;\n  height: ${props => props.height}em;\n  text-justify: auto;\n  text-align: start;\n  font-family: \"Roboto\", sans-serif;\n  margin-left: ${props => props.margin_left}px;\n  border-radius: 15px;\n  outline: none;\n  border: 1px solid rgba(200, 200, 200, 0.03);\n  padding: 0 10px;\n  transition: all, 200ms ease-in-out;\n  box-sizing: border-box;\n  border-bottom: 1.4px solid transparent;\n\n  ::placeholder {\n    color: ${props => props.color};\n  }\n  &:focus {\n    outline: none;\n    border-bottom: 2px solid #111;\n  }\n  &:not(:last-of-type) {\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\n  }\n`;\n_c7 = InputDescription;\nconst MultipleLineInput = styled.textarea`\n  resize: none;\n  text-justify: auto;\n  font-family: \"Roboto\", sans-serif;\n  text-align: start;\n  margin-left: 20px;\n  margin-right: 10px;\n  border-radius: 15px;\n  outline: none;\n  border: 1px solid rgba(200, 200, 200, 0.03);\n  padding: 0 10px;\n  transition: all, 200ms ease-in-out;\n  box-sizing: border-box;\n  border-bottom: 1.4px solid transparent;\n  padding: 10px;\n  text-indent: 10px;\n  ::placeholder {\n    color: ${props => props.color};\n    text-indent: 10px;\n  }\n  &:focus {\n    outline: none;\n    border-bottom: 2px solid #111;\n  }\n  &:not(:last-of-type) {\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\n  }\n`;\n_c8 = MultipleLineInput;\nconst LabelText = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: ${props => props.fontsize}px;\n  color: ${props => props.color};\n  justify-content: ${props => props.type === \"small\" ? `center` : `flex-start`};\n  margin-top: ${props => props.type === \"small\" ? -2 : 8}px;\n  margin-left: 18px;\n  margin-bottom: 5px;\n`;\n_c9 = LabelText;\nconst SubmitButton = styled.button`\n  position: fixed;\n  top: 78%;\n  left: 20%;\n  padding: 10px;\n  border-radius: 10px;\n  outline: border;\n  border: 0;\n  background-color: white;\n  max-width: 80px;\n  max-height: 50px;\n  box-shadow: 0px 5px 10px rgba(darken(dodgerblue, 40%));\n  transition: all 0.3s;\n  cursor: pointer;\n  border-bottom: 4px solid lightgreen(gray, 70%);\n\n  &:hover {\n    box-shadow: 0px 15px 25px -5px rgba(darken(dodgerblue, 40%));\n    transform: scale(1.03);\n  }\n  &:active {\n    box-shadow: 0x 4px 8px rgba(darken(dodgerblue, 30%));\n    transform: scale(0.98);\n  }\n`;\n_c10 = SubmitButton;\nconst Button = styled.button`\n  position: fixed;\n  top: ${props => props.top}%;\n  left: ${props => props.left}%;\n  padding: 10px;\n  border-radius: 10px;\n  outline: border;\n  border: 0;\n  background-color: white;\n  max-width: 80px;\n  max-height: 50px;\n  box-shadow: 0px 5px 10px rgba(darken(dodgerblue, 40%));\n  transition: all 0.3s;\n  cursor: pointer;\n  border-bottom: 4px solid lightgreen(gray, 70%);\n\n  &:hover {\n    box-shadow: 0px 15px 25px -5px rgba(darken(dodgerblue, 40%));\n    transform: scale(1.03);\n  }\n  &:active {\n    box-shadow: 0x 4px 8px rgba(darken(dodgerblue, 30%));\n    transform: scale(0.98);\n  }\n`;\n_c11 = Button;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"AdminWordsModal\");\n$RefreshReg$(_c2, \"FormContainer\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"ImageContainer\");\n$RefreshReg$(_c5, \"InputField\");\n$RefreshReg$(_c6, \"Inputboxandname\");\n$RefreshReg$(_c7, \"InputDescription\");\n$RefreshReg$(_c8, \"MultipleLineInput\");\n$RefreshReg$(_c9, \"LabelText\");\n$RefreshReg$(_c10, \"SubmitButton\");\n$RefreshReg$(_c11, \"Button\");","map":{"version":3,"sources":["C:/Users/amank/Desktop/Real_Project_file/ges/frontend/src/utils/PopupContainer/AdminWords.js"],"names":["React","useState","useEffect","useRef","styled","useSelector","useDispatch","useFormik","yup","updateAdminWords","AdminWordsModal","showModals","setShowModals","errormessage","setErrormessage","adminwords","rootReducers","Description","schoolDescriptionReducer","dispatch","validationSchema","object","Designation","string","min","required","Name","image","setImage","preview","setPreview","finalInputRef","reader","FileReader","onloadend","result","readAsDataURL","HangleImageInput","event","current","click","onSubmit","e","values","resetForm","console","log","fetch","method","headers","body","JSON","stringify","then","res","status","Error","json","resdata","catch","err","message","formik","initialValues","validateOnBlur","handleSubmit","touched","errors","handleChange","handleBlur","imagefile","target","files","objectFit","height","prev","FormContainer","form","Input","input","props","display","ImageContainer","div","InputField","top","left","Inputboxandname","InputDescription","width","margin_left","color","MultipleLineInput","textarea","LabelText","label","fontsize","type","SubmitButton","button","Button"],"mappings":"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A;AACA;AACA;AACA;AACA,CAzBA;MAAMH,gB;AA2BN,MAAMI,iBAAiB,GAAGxF,MAAM,CAACyF,QAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAcb,KAAD,IAAWA,KAAK,CAACW,KAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA;MAAMC,iB;AA6BN,MAAME,SAAS,GAAG1F,MAAM,CAAC2F,KAAM;AAC/B;AACA;AACA,eAAgBf,KAAD,IAAWA,KAAK,CAACgB,QAAS;AACzC,WAAYhB,KAAD,IAAWA,KAAK,CAACW,KAAM;AAClC,qBAAsBX,KAAD,IACjBA,KAAK,CAACiB,IAAN,KAAe,OAAf,GAA0B,QAA1B,GAAqC,YAAY;AACrD,gBAAiBjB,KAAD,IAAYA,KAAK,CAACiB,IAAN,KAAe,OAAf,GAAyB,CAAC,CAA1B,GAA8B,CAAG;AAC7D;AACA;AACA,CAVA;MAAMH,S;AAYN,MAAMI,YAAY,GAAG9F,MAAM,CAAC+F,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBA;OAAMD,Y;AA0BN,MAAME,MAAM,GAAGhG,MAAM,CAAC+F,MAAO;AAC7B;AACA,SAAUnB,KAAD,IAAWA,KAAK,CAACK,GAAI;AAC9B,UAAWL,KAAD,IAAWA,KAAK,CAACM,IAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBA;OAAMc,M","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { updateAdminWords } from \"../../Data/actions/schooldetailsaction\";\r\n\r\nfunction AdminWordsModal({ showModals, setShowModals }) {\r\n  const [errormessage, setErrormessage] = useState(null);\r\n  const adminwords = useSelector(function (rootReducers) {\r\n    return {\r\n      Description: rootReducers.schoolDescriptionReducer.Description,\r\n    };\r\n  });\r\n  const dispatch = useDispatch();\r\n  const validationSchema = yup.object({\r\n    Designation: yup.string().min(3).required(\"Minimum Length 5 words\"),\r\n    Description: yup.string().min(10).required(\"Minimum Length 10 words\"),\r\n    Name: yup.string().min(5).required(\"Minimum Length 5 words\"),\r\n  });\r\n  const [image, setImage] = useState(\"\");\r\n  const [preview, setPreview] = useState(\"\");\r\n  const finalInputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(image);\r\n    } else {\r\n      setPreview(null);\r\n    }\r\n  }, [image]);\r\n\r\n  const HangleImageInput = (event) => {\r\n    finalInputRef.current.click();\r\n  };\r\n\r\n  const onSubmit = (e, values, { resetForm }) => {\r\n    \r\n    console.log(values);\r\n    // const formData = new FormData();\r\n    // formData.append(\"Designation\", values.Designation);\r\n    // formData.append(\"Description\", values.Description);\r\n    // formData.append(\"Name\", values.Name);\r\n    // formData.append(\"Picture\", preview);\r\n    fetch(\"http://localhost:8080/description/createdescription\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        Designation: values.Designation,\r\n        Description: values.Description,\r\n        Name: values.Name,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 422) {\r\n          throw new Error(\"Couldn't post the data\");\r\n        }\r\n\r\n        res.json();\r\n      })\r\n      .then((resdata) => {\r\n        console.log(resdata);\r\n      })\r\n      .catch((err) => {\r\n        setErrormessage(err.message);\r\n      });\r\n\r\n    resetForm({ values: \"\" });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: { Designation: \"\", Description: \"\", Name: \"\" },\r\n    validateOnBlur: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {showModals ? (\r\n        <div>\r\n          {console.log(adminwords.Description)}\r\n          {/* <h1>{adminwords.Description.Description}</h1> */}\r\n\r\n          <FormContainer onSubmit={formik.handleSubmit}>\r\n            <InputField top={17} left={15}>\r\n              <Inputboxandname>\r\n                <LabelText\r\n                  type={\"small\"}\r\n                  color={\r\n                    formik.touched.Designation && formik.errors.Designation\r\n                      ? \"red\"\r\n                      : \"white\"\r\n                  }\r\n                  fontsize={\r\n                    formik.touched.Designation && formik.errors.Designation\r\n                      ? 12\r\n                      : 16\r\n                  }\r\n                >\r\n                  {formik.touched.Designation && formik.errors.Designation\r\n                    ? \"Designation Required *\"\r\n                    : \"Designation\"}\r\n                </LabelText>\r\n                <InputDescription\r\n                  name=\"Designation\"\r\n                  type=\"text\"\r\n                  placeholder={\r\n                    formik.errors.Designation && formik.touched.Designation\r\n                      ? formik.errors.Designation\r\n                      : \"Please Enter Your Designation\"\r\n                  }\r\n                  color={\r\n                    formik.errors.Designation && formik.touched.Designation\r\n                      ? \"red\"\r\n                      : \"black\"\r\n                  }\r\n                  width={30}\r\n                  height={2.5}\r\n                  margin_left={20}\r\n                  type={\"random\"}\r\n                  value={formik.values.Designation}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  className={\r\n                    formik.errors.Designation &&\r\n                    formik.touched.Designation &&\r\n                    \"error\"\r\n                  }\r\n                ></InputDescription>\r\n              </Inputboxandname>\r\n            </InputField>\r\n\r\n            <InputField top={17} left={50}>\r\n              {/* <---------------------- Name ------------------->  */}\r\n              <Inputboxandname>\r\n                <LabelText\r\n                  type={\"small\"}\r\n                  color={\r\n                    formik.touched.Name && formik.errors.Name ? \"red\" : \"white\"\r\n                  }\r\n                  fontsize={formik.touched.Name && formik.errors.Name ? 12 : 16}\r\n                >\r\n                  {formik.touched.Name && formik.errors.Name\r\n                    ? \"Name Required *\"\r\n                    : \"Name\"}\r\n                </LabelText>\r\n                {/* <h1>{formik.errors.Name}</h1> */}\r\n                <InputDescription\r\n                  name=\"Name\"\r\n                  type=\"text\"\r\n                  placeholder={\r\n                    formik.errors.Name && formik.touched.Name\r\n                      ? formik.errors.Name\r\n                      : \"Please Enter Your Name\"\r\n                  }\r\n                  color={\r\n                    formik.errors.Name && formik.touched.Name ? \"red\" : \"black\"\r\n                  }\r\n                  width={30}\r\n                  height={2.5}\r\n                  margin_left={20}\r\n                  type={\"random\"}\r\n                  value={formik.values.Name}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  className={\r\n                    formik.errors.Designation &&\r\n                    formik.touched.Designation &&\r\n                    \"error\"\r\n                  }\r\n                ></InputDescription>\r\n              </Inputboxandname>\r\n            </InputField>\r\n\r\n            {/* <---------------------- Picture Section ------------------->  */}\r\n\r\n            <InputField top={30} left={55}>\r\n              <LabelText type={\"large\"} color={\"white\"}>\r\n                Random\r\n              </LabelText>\r\n              <Input\r\n                type=\"file\"\r\n                accept=\"images/*\"\r\n                display={\"none\"}\r\n                ref={finalInputRef}\r\n                onChange={(event) => {\r\n                  const imagefile = event.target.files[0];\r\n                  if (imagefile) {\r\n                    setImage(imagefile);\r\n                  } else {\r\n                    setImage(null);\r\n                  }\r\n                }}\r\n              />\r\n              <Button left={75} top={40} onClick={HangleImageInput}>\r\n                Add Photo{\" \"}\r\n              </Button>\r\n              <ImageContainer>\r\n                <img\r\n                  src={preview}\r\n                  style={{ objectFit: \"cover\", height: \"inherit\" }}\r\n                />\r\n              </ImageContainer>\r\n            </InputField>\r\n\r\n            {/* <---------------------- Description ------------------->  */}\r\n\r\n            <InputField left={15}>\r\n              <LabelText\r\n                type={\"large\"}\r\n                color={\r\n                  formik.touched.Description && formik.errors.Description\r\n                    ? \"red\"\r\n                    : \"white\"\r\n                }\r\n                fontsize={\r\n                  formik.touched.Description && formik.errors.Description\r\n                    ? 12\r\n                    : 16\r\n                }\r\n              >\r\n                {formik.touched.Description && formik.errors.Description\r\n                  ? \"Description Required *\"\r\n                  : \"Description\"}\r\n              </LabelText>\r\n              <MultipleLineInput\r\n                name=\"Description\"\r\n                type=\"textarea\"\r\n                placeholder={\r\n                  formik.errors.Description && formik.touched.Description\r\n                    ? formik.errors.Description\r\n                    : \"Please Enter Your Complete Description\"\r\n                }\r\n                color={\r\n                  formik.errors.Description && formik.touched.Description\r\n                    ? \"red\"\r\n                    : \"black\"\r\n                }\r\n                cols=\"60\"\r\n                rows=\"16\"\r\n                value={formik.values.Description}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                className={\r\n                  formik.errors.Description &&\r\n                  formik.touched.Description &&\r\n                  \"errors\"\r\n                }\r\n              >\r\n                NoResize\r\n              </MultipleLineInput>\r\n            </InputField>\r\n\r\n            <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n\r\n            <Button\r\n              top={78}\r\n              left={75}\r\n              onClick={() => {\r\n                setShowModals((prev) => !prev);\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n\r\n            <br />\r\n          </FormContainer>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminWordsModal;\r\n\r\nconst FormContainer = styled.form`\r\n  background-color: #001219;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 60em;\r\n  height: 30em;\r\n  top: 15%;\r\n  left: 15%;\r\n  position: fixed;\r\n  border-radius: 20px;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  margin: 40px 0px 0px 30px;\r\n  background-color: white;\r\n  width: 20rem;\r\n  height: 2rem;\r\n  text-indent: 10px;\r\n  outline: none;\r\n  text-decoration: none;\r\n  border: none;\r\n  border-radius: 8px;\r\n  display: ${(props) => props.display};\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  position: fixed;\r\n  top: 37%;\r\n  left: 58%;\r\n  height: 15vw;\r\n  width: 15vw;\r\n  background-color: white;\r\n`;\r\n\r\n// This is used to change the location of the input field with the Description\r\nconst InputField = styled.div`\r\n  /* display: flex;\r\n  flex-direction: row;\r\n  padding: 5px;\r\n  justify-content: space-evenly; */\r\n  position: fixed;\r\n  top: ${(props) => props.top}%;\r\n  left: ${(props) => props.left}%;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Inputboxandname = styled.div`\r\n  /* display: flex;\r\n  flex-direction: column; */\r\n  top: 20%;\r\n`;\r\n\r\nconst InputDescription = styled.input`\r\n  width: ${(props) => props.width}em;\r\n  height: ${(props) => props.height}em;\r\n  text-justify: auto;\r\n  text-align: start;\r\n  font-family: \"Roboto\", sans-serif;\r\n  margin-left: ${(props) => props.margin_left}px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  border: 1px solid rgba(200, 200, 200, 0.03);\r\n  padding: 0 10px;\r\n  transition: all, 200ms ease-in-out;\r\n  box-sizing: border-box;\r\n  border-bottom: 1.4px solid transparent;\r\n\r\n  ::placeholder {\r\n    color: ${(props) => props.color};\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 2px solid #111;\r\n  }\r\n  &:not(:last-of-type) {\r\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\r\n  }\r\n`;\r\n\r\nconst MultipleLineInput = styled.textarea`\r\n  resize: none;\r\n  text-justify: auto;\r\n  font-family: \"Roboto\", sans-serif;\r\n  text-align: start;\r\n  margin-left: 20px;\r\n  margin-right: 10px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  border: 1px solid rgba(200, 200, 200, 0.03);\r\n  padding: 0 10px;\r\n  transition: all, 200ms ease-in-out;\r\n  box-sizing: border-box;\r\n  border-bottom: 1.4px solid transparent;\r\n  padding: 10px;\r\n  text-indent: 10px;\r\n  ::placeholder {\r\n    color: ${(props) => props.color};\r\n    text-indent: 10px;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 2px solid #111;\r\n  }\r\n  &:not(:last-of-type) {\r\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\r\n  }\r\n`;\r\n\r\nconst LabelText = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: ${(props) => props.fontsize}px;\r\n  color: ${(props) => props.color};\r\n  justify-content: ${(props) =>\r\n    props.type === \"small\" ? `center` : `flex-start`};\r\n  margin-top: ${(props) => (props.type === \"small\" ? -2 : 8)}px;\r\n  margin-left: 18px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  position: fixed;\r\n  top: 78%;\r\n  left: 20%;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  outline: border;\r\n  border: 0;\r\n  background-color: white;\r\n  max-width: 80px;\r\n  max-height: 50px;\r\n  box-shadow: 0px 5px 10px rgba(darken(dodgerblue, 40%));\r\n  transition: all 0.3s;\r\n  cursor: pointer;\r\n  border-bottom: 4px solid lightgreen(gray, 70%);\r\n\r\n  &:hover {\r\n    box-shadow: 0px 15px 25px -5px rgba(darken(dodgerblue, 40%));\r\n    transform: scale(1.03);\r\n  }\r\n  &:active {\r\n    box-shadow: 0x 4px 8px rgba(darken(dodgerblue, 30%));\r\n    transform: scale(0.98);\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  position: fixed;\r\n  top: ${(props) => props.top}%;\r\n  left: ${(props) => props.left}%;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  outline: border;\r\n  border: 0;\r\n  background-color: white;\r\n  max-width: 80px;\r\n  max-height: 50px;\r\n  box-shadow: 0px 5px 10px rgba(darken(dodgerblue, 40%));\r\n  transition: all 0.3s;\r\n  cursor: pointer;\r\n  border-bottom: 4px solid lightgreen(gray, 70%);\r\n\r\n  &:hover {\r\n    box-shadow: 0px 15px 25px -5px rgba(darken(dodgerblue, 40%));\r\n    transform: scale(1.03);\r\n  }\r\n  &:active {\r\n    box-shadow: 0x 4px 8px rgba(darken(dodgerblue, 30%));\r\n    transform: scale(0.98);\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}
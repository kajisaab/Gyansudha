{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amank\\\\Desktop\\\\Real_Project_file\\\\ges\\\\frontend\\\\src\\\\utils\\\\PopupContainer\\\\AdminWords.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AdminWordsModal({\n  showModals,\n  setShowModals\n}) {\n  _s();\n\n  const validationSchema = yup.object({\n    Designation: yup.string().min(3).required(\"Required and must not be less then 3 digit\"),\n    Description: yup.string().required(\"Required and must not be less than 10 digit\"),\n    Name: yup.string().required(\"Required and Name must not be less than 2 digit\")\n  });\n\n  const onSubmit = values => {\n    console.log(values);\n    alert(values.Designation);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      Designation: \"\",\n      Description: \"\",\n      Name: \"\"\n    },\n    validateOnBlur: true,\n    validationSchema: validationSchema,\n    onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModals ? /*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        children: [/*#__PURE__*/_jsxDEV(LabelText, {\n          type: \"small\",\n          children: \" Designation = \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputDescription, {\n          name: \"Designation\",\n          type: \"text\",\n          placeholder: formik.errors.Designation && formik.touched.Designation ? formik.errors.Designation : \"Please Enter Your Designation\",\n          color: formik.errors.Designation && formik.touched.Designation ? \"red\" : \"black\",\n          width: 25,\n          height: 2.5,\n          margin_left: 20,\n          type: \"random\",\n          value: formik.values.Designation,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          className: formik.errors.Designation && formik.touched.Designation && \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        children: [/*#__PURE__*/_jsxDEV(LabelText, {\n          type: \"small\",\n          children: \" Name = \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputDescription, {\n          name: \"Name\",\n          type: \"text\",\n          placeholder: formik.errors.Name && formik.touched.Name ? formik.errors.Name : \"Please Enter Your Name\",\n          color: formik.errors.Name && formik.touched.Name ? \"red\" : \"black\",\n          width: 25,\n          height: 2.5,\n          margin_left: 63,\n          type: \"random\",\n          value: formik.values.Name,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          className: formik.errors.Designation && formik.touched.Designation && \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        children: [/*#__PURE__*/_jsxDEV(LabelText, {\n          type: \"random\",\n          children: \" Description = \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MultipleLineInput, {\n          name: \"Description\",\n          type: \"textarea\",\n          placeholder: formik.errors.Description && formik.touched.Description ? formik.errors.Description : \"Please Enter Your Complete Description\",\n          color: formik.errors.Description && formik.touched.Description ? \"red\" : \"black\",\n          cols: \"60\",\n          rows: \"16\",\n          value: formik.values.Description,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          className: formik.errors.Description && formik.touched.Description && \"errors\",\n          children: \"NoResize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(AdminWordsModal, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = AdminWordsModal;\nexport default AdminWordsModal;\nconst FormContainer = styled.form`\n  background-color: #145da0;\n  display: flex;\n  flex-direction: column;\n  width: 40em;\n  height: 30em;\n  top: 15%;\n  left: 30%;\n  position: fixed;\n  border-radius: 20px;\n`;\n_c2 = FormContainer;\nconst InputField = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 5px;\n  padding: 5px;\n`;\n_c3 = InputField;\nconst ErrorText = styled.label`\n  margin-top: 0;\n  margin-bottom: 5px;\n  color: red;\n  text-decoration: none;\n  font-weight: 500;\n  z-index: 999;\n`;\nconst InputDescription = styled.input`\n  margin-bottom: 1px;\n  width: ${props => props.width}em;\n  height: ${props => props.height}em;\n  text-justify: auto;\n  text-align: start;\n  font-family: \"Roboto\", sans-serif;\n  margin-left: ${props => props.margin_left}px;\n  border-radius: 15px;\n  outline: none;\n  border: 1px solid rgba(200, 200, 200, 0.03);\n  padding: 0 10px;\n  transition: all, 200ms ease-in-out;\n  box-sizing: border-box;\n  border-bottom: 1.4px solid transparent;\n\n  ::placeholder {\n    color: ${props => props.color};\n  }\n  &:focus {\n    outline: none;\n    border-bottom: 2px solid #111;\n  }\n  &:not(:last-of-type) {\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\n  }\n`;\n_c4 = InputDescription;\nconst MultipleLineInput = styled.textarea`\n  margin-bottom: 1px;\n  resize: none;\n  text-justify: auto;\n  font-family: \"Roboto\", sans-serif;\n  text-align: start;\n  margin-left: 20px;\n  border-radius: 15px;\n  outline: none;\n  border: 1px solid rgba(200, 200, 200, 0.03);\n  padding: 0 10px;\n  transition: all, 200ms ease-in-out;\n  box-sizing: border-box;\n  border-bottom: 1.4px solid transparent;\n  padding: 10px;\n  text-indent: 10px;\n  ::placeholder {\n    color: ${props => props.color};\n    text-indent: 10px;\n  }\n  &:focus {\n    outline: none;\n    border-bottom: 2px solid #111;\n  }\n  &:not(:last-of-type) {\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\n  }\n`;\n_c5 = MultipleLineInput;\nconst LabelText = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  color: #000;\n  justify-content: ${props => props.type === \"small\" ? `center` : `flex-start`};\n  margin-top: ${props => props.type === \"small\" ? -2 : 8}px;\n  margin-left: 10px;\n`;\n_c6 = LabelText;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"AdminWordsModal\");\n$RefreshReg$(_c2, \"FormContainer\");\n$RefreshReg$(_c3, \"InputField\");\n$RefreshReg$(_c4, \"InputDescription\");\n$RefreshReg$(_c5, \"MultipleLineInput\");\n$RefreshReg$(_c6, \"LabelText\");","map":{"version":3,"sources":["C:/Users/amank/Desktop/Real_Project_file/ges/frontend/src/utils/PopupContainer/AdminWords.js"],"names":["React","useState","useEffect","styled","useFormik","yup","AdminWordsModal","showModals","setShowModals","validationSchema","object","Designation","string","min","required","Description","Name","onSubmit","values","console","log","alert","formik","initialValues","validateOnBlur","handleSubmit","errors","touched","handleChange","handleBlur","FormContainer","form","InputField","div","ErrorText","label","InputDescription","input","props","width","height","margin_left","color","MultipleLineInput","textarea","LabelText","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;;AAEA,SAASC,eAAT,CAAyB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAzB,EAAwD;AAAA;;AACtD,QAAMC,gBAAgB,GAAGJ,GAAG,CAACK,MAAJ,CAAW;AAClCC,IAAAA,WAAW,EAAEN,GAAG,CACbO,MADU,GAEVC,GAFU,CAEN,CAFM,EAGVC,QAHU,CAGD,4CAHC,CADqB;AAKlCC,IAAAA,WAAW,EAAEV,GAAG,CACbO,MADU,GAEVE,QAFU,CAED,6CAFC,CALqB;AAQlCE,IAAAA,IAAI,EAAEX,GAAG,CACNO,MADG,GAEHE,QAFG,CAEM,iDAFN;AAR4B,GAAX,CAAzB;;AAaA,QAAMG,QAAQ,GAAIC,MAAD,IAAY;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAG,IAAAA,KAAK,CAACH,MAAM,CAACP,WAAR,CAAL;AACD,GAHD;;AAKA,QAAMW,MAAM,GAAGlB,SAAS,CAAC;AACvBmB,IAAAA,aAAa,EAAE;AAAEZ,MAAAA,WAAW,EAAE,EAAf;AAAmBI,MAAAA,WAAW,EAAE,EAAhC;AAAoCC,MAAAA,IAAI,EAAE;AAA1C,KADQ;AAEvBQ,IAAAA,cAAc,EAAE,IAFO;AAGvBf,IAAAA,gBAAgB,EAAEA,gBAHK;AAIvBQ,IAAAA;AAJuB,GAAD,CAAxB;AAOA,sBACE;AAAA,cACGV,UAAU,gBACT,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEe,MAAM,CAACG,YAAhC;AAAA,8BACE,QAAC,UAAD;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,gBAAD;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EACTH,MAAM,CAACI,MAAP,CAAcf,WAAd,IAA6BW,MAAM,CAACK,OAAP,CAAehB,WAA5C,GACIW,MAAM,CAACI,MAAP,CAAcf,WADlB,GAEI,+BANR;AAQE,UAAA,KAAK,EACHW,MAAM,CAACI,MAAP,CAAcf,WAAd,IAA6BW,MAAM,CAACK,OAAP,CAAehB,WAA5C,GACI,KADJ,GAEI,OAXR;AAaE,UAAA,KAAK,EAAE,EAbT;AAcE,UAAA,MAAM,EAAE,GAdV;AAeE,UAAA,WAAW,EAAE,EAff;AAgBE,UAAA,IAAI,EAAE,QAhBR;AAiBE,UAAA,KAAK,EAAEW,MAAM,CAACJ,MAAP,CAAcP,WAjBvB;AAkBE,UAAA,QAAQ,EAAEW,MAAM,CAACM,YAlBnB;AAmBE,UAAA,MAAM,EAAEN,MAAM,CAACO,UAnBjB;AAoBE,UAAA,SAAS,EACPP,MAAM,CAACI,MAAP,CAAcf,WAAd,IACAW,MAAM,CAACK,OAAP,CAAehB,WADf,IAEA;AAvBJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiCE,QAAC,UAAD;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,gBAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EACTW,MAAM,CAACI,MAAP,CAAcV,IAAd,IAAsBM,MAAM,CAACK,OAAP,CAAeX,IAArC,GACIM,MAAM,CAACI,MAAP,CAAcV,IADlB,GAEI,wBANR;AAQE,UAAA,KAAK,EACHM,MAAM,CAACI,MAAP,CAAcV,IAAd,IAAsBM,MAAM,CAACK,OAAP,CAAeX,IAArC,GAA4C,KAA5C,GAAoD,OATxD;AAWE,UAAA,KAAK,EAAE,EAXT;AAYE,UAAA,MAAM,EAAE,GAZV;AAaE,UAAA,WAAW,EAAE,EAbf;AAcE,UAAA,IAAI,EAAE,QAdR;AAeE,UAAA,KAAK,EAAEM,MAAM,CAACJ,MAAP,CAAcF,IAfvB;AAgBE,UAAA,QAAQ,EAAEM,MAAM,CAACM,YAhBnB;AAiBE,UAAA,MAAM,EAAEN,MAAM,CAACO,UAjBjB;AAkBE,UAAA,SAAS,EACPP,MAAM,CAACI,MAAP,CAAcf,WAAd,IACAW,MAAM,CAACK,OAAP,CAAehB,WADf,IAEA;AArBJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF,eA+DE,QAAC,UAAD;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,iBAAD;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EACTW,MAAM,CAACI,MAAP,CAAcX,WAAd,IAA6BO,MAAM,CAACK,OAAP,CAAeZ,WAA5C,GACIO,MAAM,CAACI,MAAP,CAAcX,WADlB,GAEI,wCANR;AAQE,UAAA,KAAK,EACHO,MAAM,CAACI,MAAP,CAAcX,WAAd,IAA6BO,MAAM,CAACK,OAAP,CAAeZ,WAA5C,GACI,KADJ,GAEI,OAXR;AAaE,UAAA,IAAI,EAAC,IAbP;AAcE,UAAA,IAAI,EAAC,IAdP;AAeE,UAAA,KAAK,EAAEO,MAAM,CAACJ,MAAP,CAAcH,WAfvB;AAgBE,UAAA,QAAQ,EAAEO,MAAM,CAACM,YAhBnB;AAiBE,UAAA,MAAM,EAAEN,MAAM,CAACO,UAjBjB;AAkBE,UAAA,SAAS,EACPP,MAAM,CAACI,MAAP,CAAcX,WAAd,IACAO,MAAM,CAACK,OAAP,CAAeZ,WADf,IAEA,QArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA/DF,eA4FE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5FF,eA8FE;AAAA;AAAA;AAAA;AAAA,cA9FF;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,GAiGP;AAlGN,mBADF;AAsGD;;GAhIQT,e;UAmBQF,S;;;KAnBRE,e;AAkIT,eAAeA,eAAf;AAEA,MAAMwB,aAAa,GAAG3B,MAAM,CAAC4B,IAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMD,a;AAYN,MAAME,UAAU,GAAG7B,MAAM,CAAC8B,GAAI;AAC9B;AACA;AACA;AACA;AACA,CALA;MAAMD,U;AAON,MAAME,SAAS,GAAG/B,MAAM,CAACgC,KAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMC,gBAAgB,GAAGjC,MAAM,CAACkC,KAAM;AACtC;AACA,WAAYC,KAAD,IAAWA,KAAK,CAACC,KAAM;AAClC,YAAaD,KAAD,IAAWA,KAAK,CAACE,MAAO;AACpC;AACA;AACA;AACA,iBAAkBF,KAAD,IAAWA,KAAK,CAACG,WAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAcH,KAAD,IAAWA,KAAK,CAACI,KAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;MAAMN,gB;AA4BN,MAAMO,iBAAiB,GAAGxC,MAAM,CAACyC,QAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAcN,KAAD,IAAWA,KAAK,CAACI,KAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA;MAAMC,iB;AA6BN,MAAME,SAAS,GAAG1C,MAAM,CAACgC,KAAM;AAC/B;AACA;AACA;AACA;AACA,qBAAsBG,KAAD,IACjBA,KAAK,CAACQ,IAAN,KAAe,OAAf,GAA0B,QAA1B,GAAqC,YAAY;AACrD,gBAAiBR,KAAD,IAAYA,KAAK,CAACQ,IAAN,KAAe,OAAf,GAAyB,CAAC,CAA1B,GAA8B,CAAG;AAC7D;AACA,CATA;MAAMD,S","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nfunction AdminWordsModal({ showModals, setShowModals }) {\r\n  const validationSchema = yup.object({\r\n    Designation: yup\r\n      .string()\r\n      .min(3)\r\n      .required(\"Required and must not be less then 3 digit\"),\r\n    Description: yup\r\n      .string()\r\n      .required(\"Required and must not be less than 10 digit\"),\r\n    Name: yup\r\n      .string()\r\n      .required(\"Required and Name must not be less than 2 digit\"),\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    alert(values.Designation);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: { Designation: \"\", Description: \"\", Name: \"\" },\r\n    validateOnBlur: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {showModals ? (\r\n        <FormContainer onSubmit={formik.handleSubmit}>\r\n          <InputField>\r\n            <LabelText type={\"small\"}> Designation = </LabelText>\r\n            <InputDescription\r\n              name=\"Designation\"\r\n              type=\"text\"\r\n              placeholder={\r\n                formik.errors.Designation && formik.touched.Designation\r\n                  ? formik.errors.Designation\r\n                  : \"Please Enter Your Designation\"\r\n              }\r\n              color={\r\n                formik.errors.Designation && formik.touched.Designation\r\n                  ? \"red\"\r\n                  : \"black\"\r\n              }\r\n              width={25}\r\n              height={2.5}\r\n              margin_left={20}\r\n              type={\"random\"}\r\n              value={formik.values.Designation}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              className={\r\n                formik.errors.Designation &&\r\n                formik.touched.Designation &&\r\n                \"error\"\r\n              }\r\n            ></InputDescription>\r\n          </InputField>\r\n\r\n          {/* <---------------------- Name ------------------->  */}\r\n\r\n          <InputField>\r\n            <LabelText type={\"small\"}> Name = </LabelText>\r\n            <InputDescription\r\n              name=\"Name\"\r\n              type=\"text\"\r\n              placeholder={\r\n                formik.errors.Name && formik.touched.Name\r\n                  ? formik.errors.Name\r\n                  : \"Please Enter Your Name\"\r\n              }\r\n              color={\r\n                formik.errors.Name && formik.touched.Name ? \"red\" : \"black\"\r\n              }\r\n              width={25}\r\n              height={2.5}\r\n              margin_left={63}\r\n              type={\"random\"}\r\n              value={formik.values.Name}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              className={\r\n                formik.errors.Designation &&\r\n                formik.touched.Designation &&\r\n                \"error\"\r\n              }\r\n            ></InputDescription>\r\n          </InputField>\r\n\r\n          {/* <---------------------- Description ------------------->  */}\r\n\r\n          <InputField>\r\n            <LabelText type={\"random\"}> Description = </LabelText>\r\n            <MultipleLineInput\r\n              name=\"Description\"\r\n              type=\"textarea\"\r\n              placeholder={\r\n                formik.errors.Description && formik.touched.Description\r\n                  ? formik.errors.Description\r\n                  : \"Please Enter Your Complete Description\"\r\n              }\r\n              color={\r\n                formik.errors.Description && formik.touched.Description\r\n                  ? \"red\"\r\n                  : \"black\"\r\n              }\r\n              cols=\"60\"\r\n              rows=\"16\"\r\n              value={formik.values.Description}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              className={\r\n                formik.errors.Description &&\r\n                formik.touched.Description &&\r\n                \"errors\"\r\n              }\r\n            >\r\n              NoResize\r\n            </MultipleLineInput>\r\n          </InputField>\r\n          <button type=\"submit\">Submit</button>\r\n\r\n          <br />\r\n        </FormContainer>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminWordsModal;\r\n\r\nconst FormContainer = styled.form`\r\n  background-color: #145da0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40em;\r\n  height: 30em;\r\n  top: 15%;\r\n  left: 30%;\r\n  position: fixed;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst InputField = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 5px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst ErrorText = styled.label`\r\n  margin-top: 0;\r\n  margin-bottom: 5px;\r\n  color: red;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  z-index: 999;\r\n`;\r\n\r\nconst InputDescription = styled.input`\r\n  margin-bottom: 1px;\r\n  width: ${(props) => props.width}em;\r\n  height: ${(props) => props.height}em;\r\n  text-justify: auto;\r\n  text-align: start;\r\n  font-family: \"Roboto\", sans-serif;\r\n  margin-left: ${(props) => props.margin_left}px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  border: 1px solid rgba(200, 200, 200, 0.03);\r\n  padding: 0 10px;\r\n  transition: all, 200ms ease-in-out;\r\n  box-sizing: border-box;\r\n  border-bottom: 1.4px solid transparent;\r\n\r\n  ::placeholder {\r\n    color: ${(props) => props.color};\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 2px solid #111;\r\n  }\r\n  &:not(:last-of-type) {\r\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\r\n  }\r\n`;\r\n\r\nconst MultipleLineInput = styled.textarea`\r\n  margin-bottom: 1px;\r\n  resize: none;\r\n  text-justify: auto;\r\n  font-family: \"Roboto\", sans-serif;\r\n  text-align: start;\r\n  margin-left: 20px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  border: 1px solid rgba(200, 200, 200, 0.03);\r\n  padding: 0 10px;\r\n  transition: all, 200ms ease-in-out;\r\n  box-sizing: border-box;\r\n  border-bottom: 1.4px solid transparent;\r\n  padding: 10px;\r\n  text-indent: 10px;\r\n  ::placeholder {\r\n    color: ${(props) => props.color};\r\n    text-indent: 10px;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 2px solid #111;\r\n  }\r\n  &:not(:last-of-type) {\r\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\r\n  }\r\n`;\r\n\r\nconst LabelText = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1rem;\r\n  color: #000;\r\n  justify-content: ${(props) =>\r\n    props.type === \"small\" ? `center` : `flex-start`};\r\n  margin-top: ${(props) => (props.type === \"small\" ? -2 : 8)}px;\r\n  margin-left: 10px;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}
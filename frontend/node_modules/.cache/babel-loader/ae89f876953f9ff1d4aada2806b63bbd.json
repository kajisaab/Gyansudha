{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amank\\\\Desktop\\\\Real_Project_file\\\\ges\\\\frontend\\\\src\\\\utils\\\\PopupContainer\\\\AdminWords.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AdminWordsModal({\n  showModals,\n  setShowModals\n}) {\n  _s();\n\n  const validationSchema = yup.object({\n    Designation: yup.string().min(3).required(\"Minimum Length 5 words\"),\n    Description: yup.string().min(10).required(\"Minimum Length 10 words\"),\n    Name: yup.string().min(5).required(\"Minimum Length 5 words\")\n  });\n\n  const onSubmit = values => {\n    console.log(values);\n    alert(values.Designation);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      Designation: \"\",\n      Description: \"\",\n      Name: \"\"\n    },\n    validateOnBlur: true,\n    validationSchema: validationSchema,\n    onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModals ? /*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        children: [/*#__PURE__*/_jsxDEV(Inputboxandname, {\n          children: [/*#__PURE__*/_jsxDEV(LabelText, {\n            type: \"small\",\n            color: formik.touched.Designation && formik.errors.Designation ? \"red\" : \"white\",\n            fontsize: formik.touched.Designation && formik.errors.Designation ? 12 : 16,\n            children: formik.touched.Designation && formik.errors.Designation ? \"Designation Required *\" : \"Designation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputDescription, {\n            name: \"Designation\",\n            type: \"text\",\n            placeholder: formik.errors.Designation && formik.touched.Designation ? formik.errors.Designation : \"Please Enter Your Designation\",\n            color: formik.errors.Designation && formik.touched.Designation ? \"red\" : \"black\",\n            width: 15,\n            height: 2.5,\n            margin_left: 20,\n            type: \"random\",\n            value: formik.values.Designation,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            className: formik.errors.Designation && formik.touched.Designation && \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Inputboxandname, {\n          children: [/*#__PURE__*/_jsxDEV(LabelText, {\n            type: \"small\",\n            color: formik.touched.Name && formik.errors.Name ? \"red\" : \"white\",\n            fontsize: formik.touched.Name && formik.errors.Name ? 12 : 16,\n            children: formik.touched.Name && formik.errors.Name ? \"Name Required *\" : \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputDescription, {\n            name: \"Name\",\n            type: \"text\",\n            placeholder: formik.errors.Name && formik.touched.Name ? formik.errors.Name : \"Please Enter Your Name\",\n            color: formik.errors.Name && formik.touched.Name ? \"red\" : \"black\",\n            width: 15,\n            height: 2.5,\n            margin_left: 20,\n            type: \"random\",\n            value: formik.values.Name,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            className: formik.errors.Designation && formik.touched.Designation && \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        children: [/*#__PURE__*/_jsxDEV(LabelText, {\n          type: \"large\",\n          color: formik.touched.Description && formik.errors.Description ? \"red\" : \"white\",\n          fontsize: formik.touched.Description && formik.errors.Description ? 12 : 16,\n          children: formik.touched.Description && formik.errors.Description ? \"Description Required *\" : \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MultipleLineInput, {\n          name: \"Description\",\n          type: \"textarea\",\n          placeholder: formik.errors.Description && formik.touched.Description ? formik.errors.Description : \"Please Enter Your Complete Description\",\n          color: formik.errors.Description && formik.touched.Description ? \"red\" : \"black\",\n          cols: \"60\",\n          rows: \"16\",\n          value: formik.values.Description,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          className: formik.errors.Description && formik.touched.Description && \"errors\",\n          children: \"NoResize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(AdminWordsModal, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = AdminWordsModal;\nexport default AdminWordsModal;\nconst FormContainer = styled.form`\n  background-color: #001219;\n  display: flex;\n  flex-direction: column;\n  width: 40em;\n  height: 30em;\n  top: 15%;\n  left: 30%;\n  position: fixed;\n  border-radius: 20px;\n  justify-content: space-evenly;\n`;\n_c2 = FormContainer;\nconst InputField = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 5px;\n  justify-content: space-evenly;\n`;\n_c3 = InputField;\nconst Inputboxandname = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c4 = Inputboxandname;\nconst InputDescription = styled.input`\n  width: ${props => props.width}em;\n  height: ${props => props.height}em;\n  text-justify: auto;\n  text-align: start;\n  font-family: \"Roboto\", sans-serif;\n  margin-left: ${props => props.margin_left}px;\n  border-radius: 15px;\n  outline: none;\n  border: 1px solid rgba(200, 200, 200, 0.03);\n  padding: 0 10px;\n  transition: all, 200ms ease-in-out;\n  box-sizing: border-box;\n  border-bottom: 1.4px solid transparent;\n\n  ::placeholder {\n    color: ${props => props.color};\n  }\n  &:focus {\n    outline: none;\n    border-bottom: 2px solid #111;\n  }\n  &:not(:last-of-type) {\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\n  }\n`;\n_c5 = InputDescription;\nconst MultipleLineInput = styled.textarea`\n  resize: none;\n  text-justify: auto;\n  font-family: \"Roboto\", sans-serif;\n  text-align: start;\n  margin-left: 10px;\n  margin-right: 10px;\n  border-radius: 15px;\n  outline: none;\n  border: 1px solid rgba(200, 200, 200, 0.03);\n  padding: 0 10px;\n  transition: all, 200ms ease-in-out;\n  box-sizing: border-box;\n  border-bottom: 1.4px solid transparent;\n  padding: 10px;\n  text-indent: 10px;\n  ::placeholder {\n    color: ${props => props.color};\n    text-indent: 10px;\n  }\n  &:focus {\n    outline: none;\n    border-bottom: 2px solid #111;\n  }\n  &:not(:last-of-type) {\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\n  }\n`;\n_c6 = MultipleLineInput;\nconst LabelText = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: ${props => props.fontsize}px;\n  color: ${props => props.color};\n  justify-content: ${props => props.type === \"small\" ? `center` : `flex-start`};\n  margin-top: ${props => props.type === \"small\" ? -2 : 8}px;\n  margin-left: 18px;\n  margin-bottom: 5px;\n`;\n_c7 = LabelText;\nconst SubmitButton = styled.button`\n  position: fixed;\n  top: 82%;\n  left: 70%;\n  padding: 10px;\n  border-radius: 10px;\n  outline: border;\n\n  border: 0;\n  max-width: 80px;\n  max-height: 50px;\n  box-shadow: 0px 5px 10px rgba(darken(dodgerblue, 40%));\n  transition: all 0.3s;\n  cursor: pointer;\n  border-bottom: 4px solid lightgreen(gray, 70%);\n\n  &:hover {\n    box-shadow: 0px 15px 25px -5px rgba(darken(dodgerblue, 40%));\n    transform: scale(1.03);\n  }\n  &:active {\n    box-shadow: 0x 4px 8px rgba(darken(dodgerblue, 30%));\n    transform: scale(0.98);\n  }\n`;\n_c8 = SubmitButton;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"AdminWordsModal\");\n$RefreshReg$(_c2, \"FormContainer\");\n$RefreshReg$(_c3, \"InputField\");\n$RefreshReg$(_c4, \"Inputboxandname\");\n$RefreshReg$(_c5, \"InputDescription\");\n$RefreshReg$(_c6, \"MultipleLineInput\");\n$RefreshReg$(_c7, \"LabelText\");\n$RefreshReg$(_c8, \"SubmitButton\");","map":{"version":3,"sources":["C:/Users/amank/Desktop/Real_Project_file/ges/frontend/src/utils/PopupContainer/AdminWords.js"],"names":["React","useState","useEffect","styled","useFormik","yup","AdminWordsModal","showModals","setShowModals","validationSchema","object","Designation","string","min","required","Description","Name","onSubmit","values","console","log","alert","formik","initialValues","validateOnBlur","handleSubmit","touched","errors","handleChange","handleBlur","FormContainer","form","InputField","div","Inputboxandname","InputDescription","input","props","width","height","margin_left","color","MultipleLineInput","textarea","LabelText","label","fontsize","type","SubmitButton","button"],"mappings":"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AAClC,YAAaD,KAAD,IAAWA,KAAK,CAACE,MAAO;AACpC;AACA;AACA;AACA,iBAAkBF,KAAD,IAAWA,KAAK,CAACG,WAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAcH,KAAD,IAAWA,KAAK,CAACI,KAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBA;MAAMN,gB;AA2BN,MAAMO,iBAAiB,GAAGvC,MAAM,CAACwC,QAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAcN,KAAD,IAAWA,KAAK,CAACI,KAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA;MAAMC,iB;AA6BN,MAAME,SAAS,GAAGzC,MAAM,CAAC0C,KAAM;AAC/B;AACA;AACA,eAAgBR,KAAD,IAAWA,KAAK,CAACS,QAAS;AACzC,WAAYT,KAAD,IAAWA,KAAK,CAACI,KAAM;AAClC,qBAAsBJ,KAAD,IACjBA,KAAK,CAACU,IAAN,KAAe,OAAf,GAA0B,QAA1B,GAAqC,YAAY;AACrD,gBAAiBV,KAAD,IAAYA,KAAK,CAACU,IAAN,KAAe,OAAf,GAAyB,CAAC,CAA1B,GAA8B,CAAG;AAC7D;AACA;AACA,CAVA;MAAMH,S;AAYN,MAAMI,YAAY,GAAG7C,MAAM,CAAC8C,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBA;MAAMD,Y","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nfunction AdminWordsModal({ showModals, setShowModals }) {\r\n  const validationSchema = yup.object({\r\n    Designation: yup.string().min(3).required(\"Minimum Length 5 words\"),\r\n    Description: yup.string().min(10).required(\"Minimum Length 10 words\"),\r\n    Name: yup.string().min(5).required(\"Minimum Length 5 words\"),\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    alert(values.Designation);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: { Designation: \"\", Description: \"\", Name: \"\" },\r\n    validateOnBlur: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {showModals ? (\r\n        <FormContainer onSubmit={formik.handleSubmit}>\r\n          <InputField>\r\n            <Inputboxandname>\r\n              <LabelText\r\n                type={\"small\"}\r\n                color={\r\n                  formik.touched.Designation && formik.errors.Designation\r\n                    ? \"red\"\r\n                    : \"white\"\r\n                }\r\n                fontsize={\r\n                  formik.touched.Designation && formik.errors.Designation\r\n                    ? 12\r\n                    : 16\r\n                }\r\n              >\r\n                {formik.touched.Designation && formik.errors.Designation\r\n                  ? \"Designation Required *\"\r\n                  : \"Designation\"}\r\n              </LabelText>\r\n              <InputDescription\r\n                name=\"Designation\"\r\n                type=\"text\"\r\n                placeholder={\r\n                  formik.errors.Designation && formik.touched.Designation\r\n                    ? formik.errors.Designation\r\n                    : \"Please Enter Your Designation\"\r\n                }\r\n                color={\r\n                  formik.errors.Designation && formik.touched.Designation\r\n                    ? \"red\"\r\n                    : \"black\"\r\n                }\r\n                width={15}\r\n                height={2.5}\r\n                margin_left={20}\r\n                type={\"random\"}\r\n                value={formik.values.Designation}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                className={\r\n                  formik.errors.Designation &&\r\n                  formik.touched.Designation &&\r\n                  \"error\"\r\n                }\r\n              ></InputDescription>\r\n            </Inputboxandname>\r\n\r\n            {/* <---------------------- Name ------------------->  */}\r\n            <Inputboxandname>\r\n              <LabelText\r\n                type={\"small\"}\r\n                color={\r\n                  formik.touched.Name && formik.errors.Name ? \"red\" : \"white\"\r\n                }\r\n                fontsize={formik.touched.Name && formik.errors.Name ? 12 : 16}\r\n              >\r\n                {formik.touched.Name && formik.errors.Name\r\n                  ? \"Name Required *\"\r\n                  : \"Name\"}\r\n              </LabelText>\r\n              {/* <h1>{formik.errors.Name}</h1> */}\r\n              <InputDescription\r\n                name=\"Name\"\r\n                type=\"text\"\r\n                placeholder={\r\n                  formik.errors.Name && formik.touched.Name\r\n                    ? formik.errors.Name\r\n                    : \"Please Enter Your Name\"\r\n                }\r\n                color={\r\n                  formik.errors.Name && formik.touched.Name ? \"red\" : \"black\"\r\n                }\r\n                width={15}\r\n                height={2.5}\r\n                margin_left={20}\r\n                type={\"random\"}\r\n                value={formik.values.Name}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                className={\r\n                  formik.errors.Designation &&\r\n                  formik.touched.Designation &&\r\n                  \"error\"\r\n                }\r\n              ></InputDescription>\r\n            </Inputboxandname>\r\n          </InputField>\r\n\r\n          {/* <---------------------- Description ------------------->  */}\r\n\r\n          <InputField>\r\n            <LabelText\r\n              type={\"large\"}\r\n              color={\r\n                formik.touched.Description && formik.errors.Description\r\n                  ? \"red\"\r\n                  : \"white\"\r\n              }\r\n              fontsize={\r\n                formik.touched.Description && formik.errors.Description\r\n                  ? 12\r\n                  : 16\r\n              }\r\n            >\r\n              {formik.touched.Description && formik.errors.Description\r\n                ? \"Description Required *\"\r\n                : \"Description\"}\r\n            </LabelText>\r\n            <MultipleLineInput\r\n              name=\"Description\"\r\n              type=\"textarea\"\r\n              placeholder={\r\n                formik.errors.Description && formik.touched.Description\r\n                  ? formik.errors.Description\r\n                  : \"Please Enter Your Complete Description\"\r\n              }\r\n              color={\r\n                formik.errors.Description && formik.touched.Description\r\n                  ? \"red\"\r\n                  : \"black\"\r\n              }\r\n              cols=\"60\"\r\n              rows=\"16\"\r\n              value={formik.values.Description}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              className={\r\n                formik.errors.Description &&\r\n                formik.touched.Description &&\r\n                \"errors\"\r\n              }\r\n            >\r\n              NoResize\r\n            </MultipleLineInput>\r\n          </InputField>\r\n          <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n\r\n          <br />\r\n        </FormContainer>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminWordsModal;\r\n\r\nconst FormContainer = styled.form`\r\n  background-color: #001219;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40em;\r\n  height: 30em;\r\n  top: 15%;\r\n  left: 30%;\r\n  position: fixed;\r\n  border-radius: 20px;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst InputField = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 5px;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst Inputboxandname = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst InputDescription = styled.input`\r\n  width: ${(props) => props.width}em;\r\n  height: ${(props) => props.height}em;\r\n  text-justify: auto;\r\n  text-align: start;\r\n  font-family: \"Roboto\", sans-serif;\r\n  margin-left: ${(props) => props.margin_left}px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  border: 1px solid rgba(200, 200, 200, 0.03);\r\n  padding: 0 10px;\r\n  transition: all, 200ms ease-in-out;\r\n  box-sizing: border-box;\r\n  border-bottom: 1.4px solid transparent;\r\n\r\n  ::placeholder {\r\n    color: ${(props) => props.color};\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 2px solid #111;\r\n  }\r\n  &:not(:last-of-type) {\r\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\r\n  }\r\n`;\r\n\r\nconst MultipleLineInput = styled.textarea`\r\n  resize: none;\r\n  text-justify: auto;\r\n  font-family: \"Roboto\", sans-serif;\r\n  text-align: start;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  border: 1px solid rgba(200, 200, 200, 0.03);\r\n  padding: 0 10px;\r\n  transition: all, 200ms ease-in-out;\r\n  box-sizing: border-box;\r\n  border-bottom: 1.4px solid transparent;\r\n  padding: 10px;\r\n  text-indent: 10px;\r\n  ::placeholder {\r\n    color: ${(props) => props.color};\r\n    text-indent: 10px;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 2px solid #111;\r\n  }\r\n  &:not(:last-of-type) {\r\n    border-bottom: 1.4px solid rgba(200, 200, 200, 0.4);\r\n  }\r\n`;\r\n\r\nconst LabelText = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: ${(props) => props.fontsize}px;\r\n  color: ${(props) => props.color};\r\n  justify-content: ${(props) =>\r\n    props.type === \"small\" ? `center` : `flex-start`};\r\n  margin-top: ${(props) => (props.type === \"small\" ? -2 : 8)}px;\r\n  margin-left: 18px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  position: fixed;\r\n  top: 82%;\r\n  left: 70%;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  outline: border;\r\n\r\n  border: 0;\r\n  max-width: 80px;\r\n  max-height: 50px;\r\n  box-shadow: 0px 5px 10px rgba(darken(dodgerblue, 40%));\r\n  transition: all 0.3s;\r\n  cursor: pointer;\r\n  border-bottom: 4px solid lightgreen(gray, 70%);\r\n\r\n  &:hover {\r\n    box-shadow: 0px 15px 25px -5px rgba(darken(dodgerblue, 40%));\r\n    transform: scale(1.03);\r\n  }\r\n  &:active {\r\n    box-shadow: 0x 4px 8px rgba(darken(dodgerblue, 30%));\r\n    transform: scale(0.98);\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}